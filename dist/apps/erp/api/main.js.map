{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/app/AppModule.ts","webpack:///./src/app/_shared/pathFile.ts","webpack:///./src/app/auth/AuthController.ts","webpack:///./src/app/auth/AuthModule.ts","webpack:///./src/app/auth/AuthService.ts","webpack:///./src/app/auth/LoggingInterceptor.ts","webpack:///./src/app/auth/decorator/RolesDecorator.ts","webpack:///./src/app/auth/guard/RolesGuard.ts","webpack:///./src/app/auth/index.ts","webpack:///./src/app/auth/strategy/AccessTokenStrategy .ts","webpack:///./src/app/auth/strategy/JwtStrategy.ts","webpack:///./src/app/auth/strategy/RefreshTokenStrategy.ts","webpack:///./src/app/modules/banners/BannerController.ts","webpack:///./src/app/modules/banners/BannerModule.ts","webpack:///./src/app/modules/banners/BannerService.ts","webpack:///./src/app/modules/banners/bannerSchema.ts","webpack:///./src/app/modules/banners/index.ts","webpack:///./src/app/modules/index.ts","webpack:///./src/app/modules/news/NewsController.ts","webpack:///./src/app/modules/news/NewsModule.ts","webpack:///./src/app/modules/news/NewsSchema.ts","webpack:///./src/app/modules/news/NewsService.ts","webpack:///./src/app/modules/news/index.ts","webpack:///./src/app/modules/products/ProductController.ts","webpack:///./src/app/modules/products/ProductModule.ts","webpack:///./src/app/modules/products/ProductSchema.ts","webpack:///./src/app/modules/products/ProductService.ts","webpack:///./src/app/modules/products/index.ts","webpack:///./src/app/modules/roles/RoleController.ts","webpack:///./src/app/modules/roles/RoleModule.ts","webpack:///./src/app/modules/roles/RoleSchema.ts","webpack:///./src/app/modules/roles/RoleService.ts","webpack:///./src/app/modules/roles/index.ts","webpack:///./src/app/modules/upload/UploadController.ts","webpack:///./src/app/modules/upload/UploadModule.ts","webpack:///./src/app/modules/upload/UploadSchema.ts","webpack:///./src/app/modules/upload/UploadService.ts","webpack:///./src/app/modules/users/UserController.ts","webpack:///./src/app/modules/users/UserModule.ts","webpack:///./src/app/modules/users/UserSchema.ts","webpack:///./src/app/modules/users/UserService.ts","webpack:///./src/app/modules/users/index.ts","webpack:///./src/app/utils/PaginationUtil.ts","webpack:///./src/app/utils/ValidateUtil.ts","webpack:///./src/app/utils/index.ts","webpack:///./src/config.ts","webpack:///../../../libs/erp/api-interfaces/src/APIEndpoints.ts","webpack:///../../../libs/erp/api-interfaces/src/_shared/pathFile.ts","webpack:///../../../libs/erp/api-interfaces/src/auth/AuthDTOs.ts","webpack:///../../../libs/erp/api-interfaces/src/auth/AuthEndpoint.ts","webpack:///../../../libs/erp/api-interfaces/src/auth/index.ts","webpack:///../../../libs/erp/api-interfaces/src/common/index.ts","webpack:///../../../libs/erp/api-interfaces/src/common/types/PaginationDTO.ts","webpack:///../../../libs/erp/api-interfaces/src/common/types/index.ts","webpack:///../../../libs/erp/api-interfaces/src/index.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/banners/BannerDTOs.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/banners/BannerEndPoint.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/banners/index.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/index.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/news/NewsDTOs.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/news/NewsEndpoint.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/news/index.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/products/ProductDTOs.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/products/ProductEndPoint.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/products/index.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/roles/RoleDTOs.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/roles/RoleEndpoint.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/roles/RolePermissions.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/roles/index.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/upload/UploadDTO.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/upload/UploadEndPoint.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/upload/index.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/users/UserDTOs.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/users/UserEndpoint.ts","webpack:///../../../libs/erp/api-interfaces/src/modules/users/index.ts","webpack:///../../../libs/erp/api-interfaces/src/utils/DTOUtil.ts","webpack:///../../../libs/erp/api-interfaces/src/utils/EndPointUtil.ts","webpack:///../../../libs/erp/api-interfaces/src/utils/Enum.ts","webpack:///../../../libs/erp/api-interfaces/src/utils/index.ts","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///external commonjs \"@nestjs/mongoose\"","webpack:///external commonjs \"@nestjs/passport\"","webpack:///external commonjs \"@nestjs/platform-express\"","webpack:///external commonjs \"@nestjs/serve-static\"","webpack:///external commonjs \"bcrypt\"","webpack:///external commonjs \"class-validator\"","webpack:///external commonjs \"cookie-parser\"","webpack:///external commonjs \"express\"","webpack:///external commonjs \"mongoose\"","webpack:///external commonjs \"multer\"","webpack:///external commonjs \"passport-jwt\"","webpack:///external commonjs \"rxjs/operators\"","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"uuid\"","webpack:///external node-commonjs \"path\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { GlobalConfig } from '../config';\r\nimport { AuthModule } from './auth';\r\nimport { BannerModule, ProductModule, RoleModule, UserModule } from './modules';\r\nimport { UploadModule } from './modules/upload/UploadModule';\r\nimport { ServeStaticModule } from '@nestjs/serve-static';\r\nimport { join } from 'path';\r\nimport { PATH_FILE_AVATAR_UPLOAD, PATH_FILE_BANNER_UPLOAD, PATH_FILE_NEWS_UPLOAD } from './_shared/pathFile';\r\nimport { NewsModule } from './modules/news';\r\nimport { JwtStrategy } from './auth/strategy/JwtStrategy';\r\nimport { APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\r\nimport { JwtModule, JwtService } from '@nestjs/jwt';\r\nimport { AuthService } from './auth/AuthService';\r\nimport { UserSchema } from './modules/users/UserSchema';\r\nimport { LoggingInterceptor } from './auth/LoggingInterceptor';\r\nimport { RolesGuard } from './auth/guard/RolesGuard';\r\nimport { AccessTokenStrategy } from './auth/strategy/AccessTokenStrategy ';\r\nimport { RefreshTokenStrategy } from './auth/strategy/RefreshTokenStrategy';\r\nconst dir = GlobalConfig.DIR\r\n\r\n@Module({\r\n  imports: [\r\n    ServeStaticModule.forRoot(\r\n      {\r\n        rootPath: join(dir, PATH_FILE_AVATAR_UPLOAD),\r\n        renderPath: '/avatar-user',\r\n      },\r\n      {\r\n        rootPath: join(dir, PATH_FILE_NEWS_UPLOAD),\r\n        renderPath: '/image-cover',\r\n      },\r\n      {\r\n        rootPath: join(dir, PATH_FILE_BANNER_UPLOAD),\r\n        renderPath: '/image-banner',\r\n      }),\r\n    AuthModule,\r\n    UserModule,\r\n    NewsModule,\r\n    UploadModule,\r\n    RoleModule,\r\n    BannerModule,\r\n    ProductModule,\r\n    MongooseModule.forRoot(GlobalConfig.Database.MongoURI),\r\n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema }]),\r\n    JwtModule.register({\r\n      secret: GlobalConfig.Authentication.ServerKey,\r\n      signOptions: { expiresIn: GlobalConfig.Authentication.ExpiresIn },\r\n    }),\r\n  ],\r\n\r\n  providers: [JwtStrategy, AuthService, JwtModule, JwtService,\r\n    AccessTokenStrategy,\r\n    RefreshTokenStrategy,\r\n    {\r\n      provide: APP_GUARD,\r\n      useClass: JwtStrategy\r\n    },\r\n    {\r\n      provide: APP_GUARD,\r\n      useClass: RolesGuard\r\n    },\r\n    {\r\n      provide: APP_INTERCEPTOR,\r\n      useClass: LoggingInterceptor,\r\n    },\r\n  ],\r\n})\r\n\r\n\r\nexport class AppModule {\r\n  constructor() {\r\n  }\r\n}","export const PATH_FILES = '/uploads/'\r\nexport const PATH_FILE_AVATAR_UPLOAD = './uploads/avatar-user/'\r\nexport const PATH_FILE_NEWS_UPLOAD = './uploads/image-cover/'\r\nexport const PATH_FILE_BANNER_UPLOAD = './uploads/image-banner/'\r\nexport const PATH_AVATAR_DEFAULT = 'fa9decf0-421b-429a-9573-42b43a6e9806image_default.png'\r\n","import {\r\n  APIEndpoints,\r\n  Auth_Response,\r\n  Auth_SignInDTO,\r\n} from '@global-victory/erp/api-interfaces';\r\nimport { Body, Controller, Get, HttpCode, HttpStatus, Post, Req, Res, UseGuards} from '@nestjs/common';\r\nimport { AuthService } from './AuthService';\r\nimport { Response, Request } from 'express';\r\nimport { AuthGuard } from '@nestjs/passport';\r\n\r\n@Controller()\r\nexport class AuthController {\r\n  constructor(\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  @HttpCode(HttpStatus.OK)\r\n  @Post(APIEndpoints.Auth.SignIn)\r\n  async signIn(@Body() payload: Auth_SignInDTO, @Res({ passthrough: true }) res: Response): Promise<Auth_Response> {\r\n    return await this.authService.signIn(payload.email, payload.password, res);\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt-access'))\r\n  @Post(APIEndpoints.Auth.SignOut)\r\n  async signOut(@Req() req: Request, @Res({ passthrough: true }) res: Response): Promise<void> {\r\n    const email = req.user['Email'];\r\n    res.clearCookie(\"access-token\", { maxAge: 0 })\r\n    res.clearCookie(\"refresh-token\", { maxAge: 0 })\r\n    this.authService.logout(email)\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt-access'))\r\n  @Get(APIEndpoints.Auth.GetMyInfo)\r\n  async getMyInfo(@Req() req: Request): Promise<string> {\r\n    return \"success\";\r\n  }\r\n\r\n  @UseGuards(AuthGuard('jwt-refresh'))\r\n  @Post(APIEndpoints.Auth.Refresh)\r\n  async refreshToken(@Req() req: Request, @Res({ passthrough: true }) res: Response): Promise<Object> {\r\n    const email = req.user['Email'];\r\n    return this.authService.refreshTokens(email, res);\r\n  }\r\n\r\n  @Post(APIEndpoints.Auth.RemoveCookie)\r\n  async removeCookie(@Res({ passthrough: true }) res: Response): Promise<void> {\r\n    res.clearCookie(\"access-token\", { maxAge: 0 })\r\n    res.clearCookie(\"refresh-token\", { maxAge: 0 })\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { GlobalConfig } from '../../config';\r\nimport { RoleModule, UserModule } from '../modules';\r\nimport { AuthController } from './AuthController';\r\nimport { AuthService } from './AuthService';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { UserSchema } from '../modules/users/UserSchema';\r\nimport { APP_GUARD } from '@nestjs/core';\r\nimport { JwtStrategy } from './strategy/JwtStrategy';\r\n\r\n@Module({\r\n  imports: [\r\n    UserModule,\r\n    RoleModule,\r\n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema }]),\r\n    PassportModule,\r\n    JwtModule.register({\r\n      secret: GlobalConfig.Authentication.ServerKey,\r\n      signOptions: { expiresIn: GlobalConfig.Authentication.ExpiresIn },\r\n    }),\r\n  ],\r\n  controllers: [AuthController],\r\n  providers: [AuthService, JwtStrategy,\r\n    {\r\n      provide: APP_GUARD,\r\n      useClass: JwtStrategy\r\n    }\r\n  ],\r\n})\r\nexport class AuthModule {}\r\n","import { ForbiddenException, HttpException, HttpStatus, Injectable, Logger, UnauthorizedException } from '@nestjs/common';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { UserService } from '../modules/users/UserService';\r\nimport { Auth_Response, User_ResponseLogin } from '@global-victory/erp/api-interfaces';\r\nimport { User, UserDocument } from '../modules/users/UserSchema';\r\nimport { Model } from 'mongoose';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport * as bcrypt from 'bcrypt';\r\nimport { Response } from 'express';\r\nimport { GlobalConfig } from '../../config';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    @InjectModel(User.name) private userModel: Model<UserDocument>,\r\n    private jwtService: JwtService,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  listPermissions: string[];\r\n\r\n  async signIn(user_email: string, user_password: string, res: Response): Promise<Auth_Response> {\r\n\r\n    try {\r\n      this.listPermissions = [];\r\n      const getUser = await this.userModel.findOne({ 'Email': user_email });\r\n\r\n      getUser.Role.Permissions.forEach(permission => {\r\n        this.listPermissions.push(Object.values(permission)[0])\r\n      })\r\n      const user: User_ResponseLogin = {\r\n        display_name: getUser.DisplayName,\r\n        email: getUser.Email,\r\n        phone: getUser.Phone,\r\n        address: getUser.Address,\r\n        updated_at: getUser.UpdatedAt,\r\n        permissions: this.listPermissions,\r\n        avatar_url: getUser.AvatarUrl\r\n      }\r\n\r\n      const passWordMathch = await bcrypt.compare(user_password, getUser.Password);\r\n      if (!passWordMathch || !getUser) {\r\n        throw new HttpException({ status: \"error\", message: 'Email Or Password Invalid !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n\r\n      }\r\n\r\n      const access_token = this.jwtService.sign(user,\r\n        {\r\n          secret: GlobalConfig.Authentication.ServerKey,\r\n          expiresIn: GlobalConfig.Authentication.ExpiresIn\r\n        });\r\n      const refresh_token = this.jwtService.sign(user, {\r\n        secret: GlobalConfig.Authentication.ServerKeyRefresh,\r\n        expiresIn: GlobalConfig.Authentication.ExpiresInRefresh\r\n      });\r\n      this.updateRefreshTokenAuth(user.email, refresh_token);\r\n      res.cookie('access-token', access_token, { expires: new Date(Date.now() + (30 * 24 * 3600000)), httpOnly: true })\r\n      res.cookie('refresh-token', refresh_token, { expires: new Date(Date.now() + (30 * 24 * 3600000)), httpOnly: true })\r\n\r\n      return {\r\n        user: user,\r\n        access_token: access_token,\r\n        refresh_token: refresh_token,\r\n        permissions: this.listPermissions\r\n      };\r\n    } catch {\r\n      throw new HttpException({ status: \"error\", message: 'Email Or Password Invalid !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n\r\n    }\r\n  }\r\n\r\n  async logout(email: string) {\r\n    try {\r\n      return await this.userService.updateRefreshTokenUser(email, null)\r\n    } catch (error) {\r\n      Logger.error(error)\r\n    }\r\n  }\r\n\r\n  async updateRefreshTokenAuth(email: string, refreshToken: string) {\r\n    try {\r\n      await this.userService.updateRefreshTokenUser(email, refreshToken);\r\n    } catch (error) {\r\n      Logger.error(error)\r\n\r\n    }\r\n  }\r\n\r\n  async refreshTokens(email: string, res: Response) {\r\n    this.listPermissions = [];\r\n    try {\r\n      const getUser = await this.userModel.findOne({ 'Email': email });\r\n\r\n      getUser.Role.Permissions.forEach(permission => {\r\n        this.listPermissions.push(Object.values(permission)[0])\r\n      })\r\n      if (!getUser || !getUser.RefreshToken) {\r\n        throw new ForbiddenException('Access Denid');\r\n      }\r\n      const user: User_ResponseLogin = {\r\n        display_name: getUser.DisplayName,\r\n        email: getUser.Email,\r\n        phone: getUser.Phone,\r\n        address: getUser.Address,\r\n        updated_at: getUser.UpdatedAt,\r\n        permissions: this.listPermissions,\r\n        avatar_url: getUser.AvatarUrl\r\n      }\r\n      const access_token = this.jwtService.sign(user,\r\n        {\r\n          secret: GlobalConfig.Authentication.ServerKey,\r\n          expiresIn: GlobalConfig.Authentication.ExpiresIn\r\n        });\r\n      const refresh_token = this.jwtService.sign(user, {\r\n        secret: GlobalConfig.Authentication.ServerKeyRefresh,\r\n        expiresIn: GlobalConfig.Authentication.ExpiresInRefresh\r\n      });\r\n      res.cookie('access-token', access_token, { expires: new Date(Date.now() + 900000), httpOnly: true })\r\n      res.cookie('refresh-token', refresh_token, { expires: new Date(Date.now() + 900000), httpOnly: true })\r\n      await this.updateRefreshTokenAuth(email, refresh_token);\r\n\r\n      return { access_token, refresh_token, permissions: this.listPermissions }\r\n\r\n    } catch (error) {\r\n      Logger.error(error)\r\n    }\r\n  }\r\n\r\n  async validateUserAndPassword(email: string): Promise<any> {\r\n    try {\r\n      const user = await this.userModel.findOne({ 'Email': email });\r\n      if (!user) {\r\n        throw new UnauthorizedException();\r\n      }\r\n      return user;\r\n    } catch (error) {\r\n      Logger.error(error)\r\n    }\r\n  }\r\n}\r\n","import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoggingInterceptor implements NestInterceptor {\r\n    intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\r\n\r\n        const httpCode = context.switchToHttp().getResponse().statusCode;\r\n\r\n        return next\r\n            .handle()\r\n            .pipe(\r\n                tap(() => {\r\n                }),\r\n            );\r\n    }\r\n}","import { SetMetadata } from \"@nestjs/common\";\r\n\r\nexport const RequirePermission = (...roles: string[]) => SetMetadata('roles',roles)","import { CanActivate, ExecutionContext, Injectable, Logger, UnauthorizedException } from \"@nestjs/common\";\r\nimport { Reflector } from \"@nestjs/core\";\r\nimport { JwtService } from \"@nestjs/jwt\";\r\nimport { GlobalConfig } from \"../../../config\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { User } from \"../../modules/users/UserSchema\";\r\nimport { Model } from \"mongoose\";\r\n\r\n@Injectable()\r\nexport class RolesGuard implements CanActivate {\r\n    constructor(\r\n        @InjectModel(User.name) private userModel: Model<User>,\r\n        private reflector: Reflector,\r\n        private jwtService: JwtService,\r\n    ) { }\r\n\r\n    listPermissions: string[];\r\n\r\n    async canActivate(context: ExecutionContext): Promise<boolean> {\r\n        const requiredPermission = this.reflector.getAllAndOverride<[]>('roles', [\r\n            context.getHandler(),\r\n            context.getClass(),\r\n        ]);\r\n        if (!requiredPermission) {\r\n            return true;\r\n        }\r\n\r\n        const request = context.switchToHttp().getRequest();\r\n        const token = this.extractTokenFromHeader(request);\r\n        this.listPermissions = [];\r\n\r\n        try {\r\n            const payload = await this.jwtService.verifyAsync(\r\n                token,\r\n                {\r\n                    secret: GlobalConfig.Authentication.ServerKey\r\n                }\r\n            );\r\n            request.user = payload\r\n            const users = await this.userModel.findOne({ 'Email': request.user['email'] });\r\n            users.Role.Permissions.forEach(permission => {\r\n                this.listPermissions.push(Object.values(permission)[0])\r\n            })\r\n        } catch {\r\n            throw new UnauthorizedException();\r\n        }\r\n        return requiredPermission.some((permission) => this.listPermissions.includes(permission))\r\n    }\r\n\r\n    private extractTokenFromHeader(request: Request): string | undefined {\r\n        try {\r\n            const [type, token] = request.headers['authorization'].split(' ') ?? [];\r\n            return type === 'Bearer' ? token : undefined;\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    }\r\n}","export * from './AuthModule';\r\n","import { Injectable, Logger, UnauthorizedException } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { GlobalConfig } from '../../../config';\r\nimport { Request } from 'express'\r\nimport { AuthService } from '../AuthService';\r\n\r\n@Injectable()\r\nexport class AccessTokenStrategy extends PassportStrategy(Strategy, 'jwt-access') {\r\n    constructor(private readonly authService: AuthService) {\r\n        super({\r\n            secretOrKey: GlobalConfig.Authentication.ServerKey,\r\n            jwtFromRequest: ExtractJwt.fromExtractors([(request: Request) => {\r\n                let data = request.cookies[\"access-token\"];\r\n                if (!data) {\r\n                    return null;\r\n                }\r\n                return data\r\n            }])\r\n        });\r\n    }\r\n\r\n    async validate(payload: any) {\r\n        try {\r\n            const user = await this.authService.validateUserAndPassword(payload.email)\r\n            if (payload === null) {\r\n                throw new UnauthorizedException(\"Invalid Token\");\r\n            }\r\n            return user;\r\n        } catch {\r\n            Logger.error(this.error)\r\n        }\r\n    }\r\n}","import { Injectable, UnauthorizedException } from \"@nestjs/common\";\r\nimport { PassportStrategy } from \"@nestjs/passport\";\r\nimport { Request } from \"express\";\r\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\r\nimport { AuthService } from \"../AuthService\";\r\nimport { GlobalConfig } from \"../../../config\";\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\r\n\r\n    constructor(private readonly authService: AuthService) {\r\n        super({\r\n            ignoreExpiration: false,\r\n            secretOrKey: GlobalConfig.Authentication.ServerKey,\r\n            jwtFromRequest: ExtractJwt.fromExtractors([(request: Request) => {\r\n                let data = request.cookies[\"access-token\"];\r\n                if (!data) {\r\n                    return null;\r\n                }\r\n                return data\r\n            }])\r\n        });\r\n    }\r\n\r\n    async validate(payload: any) {\r\n        const user = await this.authService.validateUserAndPassword(payload.email)\r\n        if (payload === null) {\r\n            throw new UnauthorizedException(\"Invalid Token\");\r\n        }\r\n        return user;\r\n    }\r\n}","import { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { Request } from 'express';\r\nimport { Injectable, Logger, UnauthorizedException } from '@nestjs/common';\r\nimport { GlobalConfig } from '../../../config';\r\nimport { AuthService } from '../AuthService';\r\n\r\n@Injectable()\r\nexport class RefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh',) {\r\n    constructor(private readonly authService: AuthService) {\r\n        super({\r\n            secretOrKey: GlobalConfig.Authentication.ServerKeyRefresh,\r\n            jwtFromRequest: ExtractJwt.fromExtractors([(request: Request) => {\r\n                let data = request.cookies[\"refresh-token\"];\r\n                if (!data) {\r\n                    return null;\r\n                }\r\n                return data\r\n            }])\r\n        });\r\n    }\r\n\r\n    async validate(payload: any) {\r\n        try {\r\n            const user = await this.authService.validateUserAndPassword(payload.email)\r\n            if (payload === null) {\r\n                throw new UnauthorizedException(\"Invalid Token\");\r\n            }\r\n            return user;\r\n        } catch {\r\n            Logger.error(this.error)\r\n        }\r\n    }\r\n}","import { Body, Controller, Delete, Get, Post, Put, Query, UseGuards } from \"@nestjs/common\";\r\nimport { BannerService } from \"./BannerService\";\r\nimport { BannerEndpoints, Banner_DeleteDTO, Banner_FindDTO, Banner_FindOneDTO, Banner_InfoDetailDTO, Banner_InfoItemDTO, Banner_UpsertDTO, Message_Response, PaginationResultDTO } from \"@global-victory/erp/api-interfaces\";\r\nimport { PaginationUtil } from \"../../utils\";\r\nimport { RequirePermission } from \"../../auth/decorator/RolesDecorator\";\r\nimport { RolesGuard } from \"../../auth/guard/RolesGuard\";\r\nimport { Permission } from \"libs/erp/api-interfaces/src/utils/Enum\";\r\n\r\n@Controller()\r\nexport class BannerController {\r\n\r\n    constructor(private bannerService: BannerService) { }\r\n\r\n    @UseGuards(RolesGuard)\r\n    @RequirePermission(Permission.BANNER_VIEW)\r\n    @Get(BannerEndpoints.Find)\r\n    async find(@Query() payload: Banner_FindDTO): Promise<PaginationResultDTO<Banner_InfoItemDTO>> {\r\n        const { _keyword } = payload;\r\n        const { page, limit } = PaginationUtil.parseFromDTO(payload);\r\n        const result = await this.bannerService.find(payload);\r\n\r\n        return PaginationUtil.transformToPaginationResult<Banner_InfoItemDTO>(\r\n            result.result,\r\n            page,\r\n            limit,\r\n            result._total\r\n        )\r\n\r\n    }\r\n\r\n    @UseGuards(RolesGuard)\r\n    @RequirePermission(Permission.BANNER_VIEW)\r\n    @Get(BannerEndpoints.FindOne)\r\n    async findOne(@Query() payload: Banner_FindOneDTO): Promise<Banner_InfoDetailDTO> {\r\n        return await this.bannerService.findOne(payload.id);\r\n    };\r\n\r\n    @UseGuards(RolesGuard)\r\n    @RequirePermission(Permission.BANNER_CREATE)\r\n    @Post(BannerEndpoints.Create)\r\n    async create(@Body() payload: Banner_UpsertDTO): Promise<Message_Response> {\r\n\r\n        return await this.bannerService.create({\r\n            banner_name: payload.banner_name,\r\n            banner_paragraph: payload.banner_paragraph,\r\n            banner_image_url: payload.banner_image_url,\r\n            pin_top: payload.pin_top,\r\n            created_by: payload.created_by\r\n        })\r\n    }\r\n\r\n    @UseGuards(RolesGuard)\r\n    @RequirePermission(Permission.BANNER_UPDATE)\r\n    @Put(BannerEndpoints.Update)\r\n    async update(@Body() payload: Banner_UpsertDTO): Promise<Message_Response> {\r\n\r\n        return await this.bannerService.update({\r\n            id: payload.id,\r\n            banner_name: payload.banner_name,\r\n            banner_paragraph: payload.banner_paragraph,\r\n            banner_image_url: payload.banner_image_url,\r\n            pin_top: payload.pin_top,\r\n            updated_by: payload.updated_by\r\n        })\r\n    }\r\n\r\n    @UseGuards(RolesGuard)\r\n    @RequirePermission(Permission.BANNER_DELETE)\r\n    @Delete(BannerEndpoints.Delete)\r\n    async delete(@Query() idBanner: Banner_DeleteDTO): Promise<Message_Response> {\r\n        return await this.bannerService.delete(idBanner.id);\r\n    }\r\n}","import { Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { BannerController } from \"./BannerController\";\r\nimport { Banner, BannerSchema } from \"./bannerSchema\";\r\nimport { BannerService } from \"./BannerService\";\r\nimport { JwtService } from \"@nestjs/jwt\";\r\nimport { UserModule } from \"../users\";\r\nimport { User, UserSchema } from \"../users/UserSchema\";\r\n\r\n@Module({\r\n    imports: [\r\n        UserModule,\r\n        MongooseModule.forFeature(\r\n            [{ name: Banner.name, schema: BannerSchema }, { name: User.name, schema: UserSchema }],\r\n        ),\r\n    ],\r\n    controllers: [BannerController],\r\n    providers: [BannerService, JwtService],\r\n    exports: [BannerService]\r\n})\r\nexport class BannerModule { }","import { Injectable, Logger } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { Banner } from \"./bannerSchema\";\r\nimport { Banner_FindDTO, Banner_InfoDetailDTO, Banner_InfoItemDTO, Banner_UpsertDTO, Message_Response, PaginationResultDTO } from \"@global-victory/erp/api-interfaces\";\r\nimport { Types, Model } from \"mongoose\";\r\n\r\n@Injectable()\r\nexport class BannerService {\r\n\r\n    constructor(@InjectModel(Banner.name) private bannerModel: Model<Banner>) { }\r\n\r\n    async find(dto: Banner_FindDTO): Promise<PaginationResultDTO<Banner_InfoItemDTO>> {\r\n\r\n        try {\r\n            const { _page, _limit, _keyword } = dto;\r\n\r\n            const regex = new RegExp([\".*\", _keyword, \".*\"].join(\"\"), \"i\");\r\n\r\n            const conditions = _keyword ? {\r\n                $and: [\r\n                    {\r\n                        $or: [\r\n                            { BannerName: regex }\r\n                        ]\r\n                    },\r\n                    { IsDeleted: false }\r\n                ]\r\n            } : null;\r\n            const totals: number = await this.bannerModel.count(conditions ? conditions : { IsDeleted: false })\r\n\r\n            const raw_data: Banner[] = await this.bannerModel.find(conditions ? conditions : { IsDeleted: false }).sort({ CreatedAt: -1 }).skip((_page - 1) * _limit).limit(_limit).exec();\r\n\r\n            const users: Banner_InfoItemDTO[] = raw_data.map((user_data: Banner) => ({\r\n                id: user_data._id.toString(),\r\n                banner_name: user_data.BannerName,\r\n                banner_paragraph: user_data.BannerParagraph,\r\n                banner_image_url: user_data.BannerImageURL,\r\n                pin_top: user_data.Pintop,\r\n                updated_at: user_data.UpdatedAt,\r\n            }))\r\n\r\n            return {\r\n                result: users,\r\n                _total: totals,\r\n                _page: _page,\r\n                _limit: _limit,\r\n                _total_page: totals / _limit,\r\n                _next_page: _page + 1,\r\n                _prev_page: _page - 1\r\n            };\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    }\r\n\r\n    async findOne(id: string): Promise<Banner_InfoDetailDTO> {\r\n\r\n        try {\r\n            const bannerDetail = await this.bannerModel.findById(new Types.ObjectId(id));\r\n\r\n            return {\r\n                id: bannerDetail._id.toString(),\r\n                banner_name: bannerDetail.BannerName,\r\n                banner_paragraph: bannerDetail.BannerParagraph,\r\n                banner_image_url: bannerDetail.BannerImageURL,\r\n                pin_top: bannerDetail.Pintop,\r\n                created_at: bannerDetail.CreatedAt,\r\n                created_by: bannerDetail.CreatedBy,\r\n                updated_by: bannerDetail.UpdateBy,\r\n                updated_at: bannerDetail.UpdatedAt\r\n            };\r\n        } catch (error) {\r\n            Logger.error(error)\r\n\r\n        }\r\n    }\r\n\r\n    async create(dto: Banner_UpsertDTO): Promise<Message_Response> {\r\n        try {\r\n            const entity: Banner = {\r\n                _id: new Types.ObjectId(dto.id),\r\n                BannerName: dto.banner_name,\r\n                BannerParagraph: dto.banner_paragraph,\r\n                BannerImageURL: dto.banner_image_url,\r\n                Pintop: dto.pin_top,\r\n                CreatedAt: new Date(),\r\n                CreatedBy: dto.created_by,\r\n                UpdatedAt: new Date(),\r\n                UpdateBy: dto.updated_by,\r\n                IsDeleted: dto.is_deleted,\r\n            }\r\n\r\n            await new this.bannerModel(entity).save();\r\n\r\n            return {\r\n                status: \"success\",\r\n                message: \"Create User Successfuly \",\r\n                title: \"Success\"\r\n            }\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    }\r\n\r\n    async update(dto: Banner_UpsertDTO): Promise<Message_Response> {\r\n        try {\r\n            const bannerUpdate = await this.findOne(dto.id);\r\n\r\n            const entity: Banner = {\r\n                _id: new Types.ObjectId(bannerUpdate.id),\r\n                BannerName: dto.banner_name,\r\n                BannerParagraph: dto.banner_paragraph,\r\n                BannerImageURL: dto.banner_image_url,\r\n                Pintop: dto.pin_top,\r\n                CreatedAt: dto.created_at,\r\n                UpdatedAt: new Date(),\r\n                CreatedBy: dto.created_by,\r\n                UpdateBy: dto.updated_by,\r\n                IsDeleted: dto.is_deleted\r\n            }\r\n\r\n            await this.bannerModel.updateOne({ _id: new Types.ObjectId(entity._id) }, { $set: entity })\r\n\r\n            return {\r\n                status: \"success\",\r\n                message: \"Create User Successfuly \",\r\n                title: \"Succes\"\r\n            }\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    }\r\n\r\n    async delete(id: string): Promise<Message_Response> {\r\n        try {\r\n            await this.bannerModel.findOneAndUpdate({ _id: new Types.ObjectId(id) }, { $set: { IsDeleted: true } });\r\n            return {\r\n                status: \"success\",\r\n                message: \"Delete Banner Successfully\",\r\n                title: \"Succes\"\r\n            }\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    }\r\n}","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\r\nimport { HydratedDocument, Types } from \"mongoose\";\r\n\r\nexport type BannerDocument = HydratedDocument<Banner>;\r\n\r\n@Schema({ versionKey: false })\r\nexport class Banner {\r\n    @Prop()\r\n    _id?: Types.ObjectId;\r\n\r\n    @Prop()\r\n    BannerName: string;\r\n\r\n    @Prop()\r\n    BannerParagraph: string;\r\n\r\n    @Prop()\r\n    BannerImageURL: string;\r\n\r\n    @Prop({ default: false })\r\n    Pintop: boolean;\r\n\r\n    @Prop()\r\n    CreatedAt: Date;\r\n\r\n    @Prop()\r\n    CreatedBy: string;\r\n\r\n    @Prop()\r\n    UpdatedAt: Date;\r\n\r\n    @Prop()\r\n    UpdateBy: string;\r\n\r\n    @Prop({ default: false })\r\n    IsDeleted: boolean;\r\n}\r\n\r\nexport const BannerSchema = SchemaFactory.createForClass(Banner);","export * from './BannerModule';","export * from './roles';\r\nexport * from './users';\r\nexport * from './banners';\r\nexport * from './products';\r\n\r\n","import { Body, Controller, Delete, Get, Post, Put, Query, UseGuards } from \"@nestjs/common\";\r\nimport { NewsService } from \"./NewsService\";\r\nimport { NewsEndpoints,\r\n         News_DeleteDTO, \r\n         News_FindDTO, \r\n         News_FindOneDTO, \r\n         News_InfoDetailDTO, \r\n         News_InfoItemDTO, \r\n         News_UpsertDTO, \r\n         PaginationResultDTO } from \"@global-victory/erp/api-interfaces\"\r\nimport { PaginationUtil } from \"../../utils\";\r\nimport { Message_Response } from \"libs/erp/api-interfaces/src/utils\";\r\nimport { RequirePermission } from \"../../auth/decorator/RolesDecorator\";\r\nimport { RolesGuard } from \"../../auth/guard/RolesGuard\";\r\nimport { Permission } from \"libs/erp/api-interfaces/src/utils/Enum\";\r\n\r\n@Controller()\r\nexport class NewsController {\r\n    constructor(\r\n        private newsService: NewsService,\r\n    ) { };\r\n\r\n    @UseGuards(RolesGuard)\r\n    @RequirePermission(Permission.NEWS_VIEW)\r\n    @Get(NewsEndpoints.Find)\r\n    async find(\r\n        @Query() payload: News_FindDTO\r\n    ): Promise<PaginationResultDTO<News_InfoItemDTO>> {\r\n\r\n        const { _keyword: keyword } = payload;\r\n\r\n        const { page, limit } = PaginationUtil.parseFromDTO(payload);\r\n\r\n        if ((payload._sortField === 'null') && (payload._filterField === 'null')) {\r\n            const result = await this.newsService.find(payload);\r\n\r\n            return PaginationUtil.transformToPaginationResult<News_InfoItemDTO>(\r\n                result.result,\r\n                page,\r\n                limit,\r\n                result._total,\r\n            )\r\n        }\r\n        if (payload._sortField) {\r\n            const result = await this.newsService.findWithSort(payload);\r\n            return PaginationUtil.transformToPaginationResult<News_InfoItemDTO>(\r\n                result.result,\r\n                page,\r\n                limit,\r\n                result._total,\r\n            )\r\n        }\r\n        if (payload._filterField) {\r\n            const result = await this.newsService.findWithFilter(payload);\r\n            return PaginationUtil.transformToPaginationResult<News_InfoItemDTO>(\r\n                result.result,\r\n                page,\r\n                limit,\r\n                result._total,\r\n            )\r\n        }\r\n    };\r\n\r\n    // @UseGuards(RolesGuard)\r\n    // @RequirePermission(Permission.NEWS_VIEW)\r\n    @Get(NewsEndpoints.FindOne)\r\n    async findOne(@Query() payload: News_FindOneDTO): Promise<News_InfoDetailDTO> {\r\n        return await this.newsService.findOne(payload.id);\r\n    };\r\n\r\n    @UseGuards( RolesGuard)\r\n    @RequirePermission(Permission.NEWS_CREATE)\r\n    @Post(NewsEndpoints.Create)\r\n    async create(@Body() payload: News_UpsertDTO): Promise<Message_Response> {\r\n        const newsCreate: News_UpsertDTO = {\r\n            title: payload.title,\r\n            description: payload.description,\r\n            rich_text_content: payload.rich_text_content,\r\n            hash_tag: payload.hash_tag,\r\n            image_cover_url: payload.image_cover_url,\r\n            pinned_top: payload.pinned_top,\r\n            created_at: payload.created_at,\r\n            created_by: payload.created_by,\r\n            updated_at: payload.updated_at,\r\n            updated_by: payload.updated_by,\r\n        }\r\n        return await this.newsService.create(newsCreate);\r\n    };\r\n\r\n    @UseGuards( RolesGuard)\r\n    @RequirePermission(Permission.NEWS_UPDATE)\r\n    @Put(NewsEndpoints.Update)\r\n    async update(@Body() payload: News_UpsertDTO): Promise<Message_Response> {\r\n        const newsUpdate: News_UpsertDTO = {\r\n            id: payload.id,\r\n            title: payload.title,\r\n            description: payload.description,\r\n            rich_text_content: payload.rich_text_content,\r\n            hash_tag: payload.hash_tag,\r\n            image_cover_url: payload.image_cover_url,\r\n            pinned_top: payload.pinned_top,\r\n            created_at: payload.created_at,\r\n            created_by: payload.created_by,\r\n            updated_at: payload.updated_at,\r\n            updated_by: payload.updated_by,\r\n        }\r\n        return await this.newsService.update(newsUpdate)\r\n    };\r\n\r\n    @UseGuards( RolesGuard)\r\n    @RequirePermission(Permission.NEWS_DELETE)\r\n    @Delete(NewsEndpoints.Delete)\r\n    async delete(@Query() payload: News_DeleteDTO): Promise<Message_Response> {\r\n        return await this.newsService.delete(payload.id);\r\n    };\r\n}","import { Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { NewsController } from \"./NewsController\";\r\nimport { News, NewsSchema } from \"./NewsSchema\";\r\nimport { NewsService } from \"./NewsService\";\r\nimport { JwtService } from \"@nestjs/jwt\";\r\nimport { User, UserSchema } from \"../users/UserSchema\";\r\n\r\n@Module({\r\n    imports: [\r\n        MongooseModule.forFeature(\r\n            [{ name: News.name, schema: NewsSchema },{ name: User.name, schema: UserSchema }],\r\n        ),\r\n    ],\r\n    controllers: [NewsController],\r\n    providers: [NewsService,JwtService],\r\n    exports: [NewsService],\r\n})\r\n\r\nexport class NewsModule { }","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\r\nimport { HydratedDocument, Types } from \"mongoose\";\r\n\r\nexport type NewsDocument = HydratedDocument<News>;\r\n\r\n@Schema({ versionKey: false })\r\nexport class News {\r\n    @Prop()\r\n    _id?: Types.ObjectId;\r\n\r\n    @Prop()\r\n    Title: string;\r\n\r\n    @Prop()\r\n    Description: string;\r\n\r\n    @Prop()\r\n    RichTextContent: string;\r\n\r\n    @Prop()\r\n    HashTag: Array<string>;\r\n\r\n    @Prop()\r\n    ImageCoverUrl: string;\r\n\r\n    @Prop({ default: false })\r\n    PinnedTop: boolean;\r\n\r\n    @Prop()\r\n    CreatedAt: Date;\r\n\r\n    @Prop()\r\n    CreatedBy: string;\r\n\r\n    @Prop()\r\n    UpdatedAt: Date;\r\n\r\n    @Prop()\r\n    UpdatedBy: string;\r\n\r\n    @Prop({ default: false })\r\n    IsDeleted: boolean;\r\n}\r\n\r\nexport const NewsSchema = SchemaFactory.createForClass(News);","import { News_FindDTO, News_InfoDetailDTO, News_InfoItemDTO, News_UpsertDTO, PaginationResultDTO } from \"@global-victory/erp/api-interfaces\";\r\nimport { HttpException, HttpStatus, Injectable, Logger } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { Message_Response } from \"libs/erp/api-interfaces/src/utils\";\r\nimport { Model, Types } from \"mongoose\";\r\nimport { News } from \"./NewsSchema\";\r\n\r\n@Injectable()\r\nexport class NewsService {\r\n\r\n    constructor(@InjectModel(News.name) private newsModel: Model<News>) { };\r\n\r\n    async find(dto: News_FindDTO): Promise<PaginationResultDTO<News_InfoItemDTO>> {\r\n\r\n        try {\r\n            const { _page, _limit, _keyword } = dto;\r\n            const regex = new RegExp([\".*\", _keyword, \".*\"].join(\"\"), \"i\");\r\n            const conditions = _keyword ? {\r\n                $and: [\r\n                    {\r\n                        Title: regex,\r\n                    },\r\n                    {\r\n                        IsDeleted: false\r\n                    },\r\n                ]\r\n            } : null;\r\n\r\n            const totals: number = await this.newsModel.count(conditions ? conditions : { IsDeleted: false });\r\n\r\n            let raw_data: News[] = await this.newsModel.find(conditions ? conditions : { IsDeleted: false })\r\n                .sort({ PinnedTop: -1, UpdatedAt: -1 })\r\n                .skip((_page - 1) * _limit).limit(_limit).exec();\r\n\r\n            const list_news: News_InfoItemDTO[] = raw_data.map((news_data: News) => (\r\n                {\r\n                    id: news_data._id.toString(),\r\n                    title: news_data.Title,\r\n                    created_at: news_data.CreatedAt,\r\n                    updated_at: news_data.UpdatedAt,\r\n                    hash_tag: news_data.HashTag,\r\n                    pinned_top: news_data.PinnedTop,\r\n                    created_by: news_data.CreatedBy,\r\n                }))\r\n\r\n            return {\r\n                result: list_news,\r\n                _total: totals,\r\n                _page: _page,\r\n                _limit: _limit,\r\n                _total_page: totals / _limit,\r\n                _next_page: _page + 1,\r\n                _prev_page: _page - 1,\r\n            }\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    };\r\n\r\n    async findOne(id: string): Promise<News_InfoDetailDTO> {\r\n        try {\r\n            const news_detail = await this.newsModel.findById(new Types.ObjectId(id));\r\n\r\n            return {\r\n                id: news_detail._id.toString(),\r\n                title: news_detail.Title,\r\n                description: news_detail.Description,\r\n                rich_text_content: news_detail.RichTextContent,\r\n                image_cover_url: news_detail.ImageCoverUrl,\r\n                hash_tag: news_detail.HashTag,\r\n                pinned_top: news_detail.PinnedTop,\r\n                created_at: news_detail.CreatedAt,\r\n                updated_at: news_detail.UpdatedAt,\r\n                created_by: news_detail.CreatedBy,\r\n                updated_by: news_detail.UpdatedBy,\r\n            }\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    };\r\n\r\n    async create(dto: News_UpsertDTO): Promise<Message_Response> {\r\n\r\n        try {\r\n            if (!dto.title) {\r\n                throw new HttpException({ status: \"error\", title: \"Error\", message: \"Title not null\" }, HttpStatus.BAD_REQUEST)\r\n            }\r\n            if (!dto.description) {\r\n                throw new HttpException({ status: \"error\", title: \"Error\", message: \"Description not null\" }, HttpStatus.BAD_REQUEST)\r\n            }\r\n            if (!dto.rich_text_content) {\r\n                throw new HttpException({ status: \"error\", title: \"Error\", message: \"Rich text content not null\" }, HttpStatus.BAD_REQUEST)\r\n            }\r\n\r\n            const news: News = {\r\n                _id: new Types.ObjectId(),\r\n                Title: dto.title,\r\n                Description: dto.description,\r\n                RichTextContent: dto.rich_text_content,\r\n                ImageCoverUrl: dto.image_cover_url,\r\n                HashTag: dto.hash_tag,\r\n                PinnedTop: dto.pinned_top,\r\n                CreatedBy: dto.created_by,\r\n                CreatedAt: new Date(),\r\n                UpdatedAt: new Date(),\r\n                UpdatedBy: dto.updated_by,\r\n                IsDeleted: false\r\n            }\r\n\r\n            await new this.newsModel(news).save();\r\n            const message_response: Message_Response = {\r\n                status: \"success\",\r\n                title: \"Succes\",\r\n                message: \"Create news successfully\"\r\n            }\r\n            return message_response;\r\n        } catch (error) {\r\n\r\n        }\r\n    };\r\n\r\n    async update(dto: News_UpsertDTO): Promise<Message_Response> {\r\n\r\n        try {\r\n            const news_old = await this.findOne(dto.id);\r\n            if (!dto.title) {\r\n                throw new HttpException({ status: \"error\", title: \"Error\", message: \"Title not null\" }, HttpStatus.BAD_REQUEST)\r\n            }\r\n            if (!dto.description) {\r\n                throw new HttpException({ status: \"error\", title: \"Error\", message: \"Description not null\" }, HttpStatus.BAD_REQUEST)\r\n            }\r\n            if (!dto.rich_text_content) {\r\n                throw new HttpException({ status: \"error\", title: \"Error\", message: \"Rich text content not null\" }, HttpStatus.BAD_REQUEST)\r\n            }\r\n\r\n            const news: News = {\r\n                _id: new Types.ObjectId(news_old.id),\r\n                Title: dto.title,\r\n                Description: dto.description,\r\n                RichTextContent: dto.rich_text_content,\r\n                ImageCoverUrl: dto.image_cover_url,\r\n                HashTag: dto.hash_tag,\r\n                PinnedTop: dto.pinned_top,\r\n                CreatedBy: dto.created_by,\r\n                CreatedAt: dto.created_at,\r\n                UpdatedAt: new Date(),\r\n                UpdatedBy: dto.updated_by,\r\n                IsDeleted: false\r\n            }\r\n            await this.newsModel.updateOne({ _id: news._id }, { $set: news })\r\n            const message_response: Message_Response = {\r\n                status: \"success\",\r\n                title: \"Succes\",\r\n                message: \"Update news successfully\"\r\n            };\r\n            return message_response;\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    };\r\n\r\n    async delete(id: string): Promise<Message_Response> {\r\n        try {\r\n            await this.newsModel.findOneAndUpdate({ _id: new Types.ObjectId(id) }, { IsDeleted: true });\r\n            const message_response: Message_Response = {\r\n                status: \"success\",\r\n                title: \"Succes\",\r\n                message: \"Delete news successfully\"\r\n            };\r\n            return message_response;\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    };\r\n\r\n    async findWithSort(dto: News_FindDTO): Promise<PaginationResultDTO<News_InfoItemDTO>> {\r\n\r\n        const { _page, _limit, _sortField, _sortOrder } = dto;\r\n\r\n        try {\r\n\r\n            const totals: number = await this.newsModel.count({ IsDeleted: false });\r\n\r\n            let raw_data: News[] = await this.newsModel.find({ IsDeleted: false })\r\n                .sort(\r\n                    _sortField === 'CreatedAt' ? { CreatedAt: _sortOrder === 'ascend' ? -1 : 1 } :\r\n                        _sortField === 'UpdatedAt' ? { UpdatedAt: _sortOrder === 'ascend' ? -1 : 1 } :\r\n                            { PinnedTop: _sortOrder === 'ascend' ? -1 : 1 }\r\n                )\r\n                .skip((_page - 1) * _limit).limit(_limit).exec();\r\n\r\n            const list_news: News_InfoItemDTO[] = raw_data.map((news_data: News) => ({\r\n                id: news_data._id.toString(),\r\n                title: news_data.Title,\r\n                created_at: news_data.CreatedAt,\r\n                updated_at: news_data.UpdatedAt,\r\n                hash_tag: news_data.HashTag,\r\n                pinned_top: news_data.PinnedTop,\r\n                created_by: news_data.CreatedBy,\r\n            }))\r\n\r\n            return {\r\n                result: list_news,\r\n                _total: totals,\r\n                _page: _page,\r\n                _limit: _limit,\r\n                _total_page: totals / _limit,\r\n                _next_page: _page + 1,\r\n                _prev_page: _page - 1,\r\n            }\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    };\r\n\r\n    async findWithFilter(dto: News_FindDTO): Promise<PaginationResultDTO<News_InfoItemDTO>> {\r\n\r\n        try {\r\n            const { _page, _limit, _filterField, _filterValue } = dto;\r\n            let filters = {};\r\n            if (_filterField !== 'HashTag') {\r\n                if (_filterField === \"CreatedAt\") {\r\n                    filters = {\r\n                        CreatedAt: {\r\n                            $gte: `${_filterValue[0]}:00:00:00`,\r\n                            $lt: `${_filterValue[1]}:23:59:59`,\r\n                        },\r\n                    };\r\n                }\r\n                if (_filterField === \"UpdatedAt\") {\r\n                    filters = {\r\n                        UpdatedAt: {\r\n                            $gte: `${_filterValue[0]}:00:00:00`,\r\n                            $lt: `${_filterValue[1]}:23:59:59`,\r\n                        },\r\n                    };\r\n                }\r\n                if (_filterField === \"PinnedTop\") {\r\n                    if (_filterValue === \"true\") {\r\n                        filters = {\r\n                            PinnedTop: true\r\n                        };\r\n                    } else {\r\n                        if (_filterValue === \"false\") {\r\n                            filters = {\r\n                                PinnedTop: false\r\n                            }\r\n                        } else {\r\n                            filters = {\r\n                                $or: [\r\n                                    { PinnedTop: true },\r\n                                    { PinnedTop: false },\r\n                                ]\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n    \r\n                const totals: number = await this.newsModel.count({ IsDeleted: false }).where(filters);\r\n    \r\n                let raw_data: News[] = await this.newsModel.find({ IsDeleted: false }).where(filters)\r\n                    .sort({ UpdatedAt: -1 })\r\n                    .skip((_page - 1) * _limit).limit(_limit).exec();\r\n                const list_news: News_InfoItemDTO[] = raw_data.map((news_data: News) => ({\r\n                    id: news_data._id.toString(),\r\n                    title: news_data.Title,\r\n                    created_at: news_data.CreatedAt,\r\n                    updated_at: news_data.UpdatedAt,\r\n                    hash_tag: news_data.HashTag,\r\n                    pinned_top: news_data.PinnedTop,\r\n                    created_by: news_data.CreatedBy,\r\n                }))\r\n    \r\n                return {\r\n                    result: list_news,\r\n                    _total: totals,\r\n                    _page: _page,\r\n                    _limit: _limit,\r\n                    _total_page: totals / _limit,\r\n                    _next_page: _page + 1,\r\n                    _prev_page: _page - 1,\r\n                }\r\n            } else {\r\n    \r\n                const totals: number = await this.newsModel.count({ IsDeleted: false, HashTag: { \"$in\": [new RegExp([\".*\", _filterValue, \".*\"].join(\"\"), \"i\")] } });\r\n    \r\n                let raw_data: News[] = await this.newsModel.find({ IsDeleted: false, HashTag: { \"$in\": [new RegExp([\".*\", _filterValue, \".*\"].join(\"\"), \"i\")] } })\r\n                    .sort({ UpdatedAt: -1 })\r\n                    .skip((_page - 1) * _limit).limit(_limit).exec();\r\n                const list_news: News_InfoItemDTO[] = raw_data.map((news_data: News) => ({\r\n                    id: news_data._id.toString(),\r\n                    title: news_data.Title,\r\n                    created_at: news_data.CreatedAt,\r\n                    updated_at: news_data.UpdatedAt,\r\n                    hash_tag: news_data.HashTag,\r\n                    pinned_top: news_data.PinnedTop,\r\n                    created_by: news_data.CreatedBy,\r\n                }))\r\n    \r\n                return {\r\n                    result: list_news,\r\n                    _total: totals,\r\n                    _page: _page,\r\n                    _limit: _limit,\r\n                    _total_page: totals / _limit,\r\n                    _next_page: _page + 1,\r\n                    _prev_page: _page - 1,\r\n                }\r\n            }\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }       \r\n    };\r\n}","export * from './NewsModule';","import { Body, Controller, Delete, Get, Inject, Post, Put, Query, UseGuards } from '@nestjs/common';\r\nimport { ProductService } from './ProductService';\r\nimport { RolesGuard } from '../../auth/guard/RolesGuard';\r\nimport { Permission } from 'libs/erp/api-interfaces/src/utils/Enum';\r\nimport { BannerEndpoints, Message_Response, PaginationResultDTO, ProductEndpoints, Product_DeleteDTO, Product_FindDTO, Product_FindOneDTO, Product_InfoDetailDTO, Product_InfoItemDTO, Product_UpsertDTO } from '@global-victory/erp/api-interfaces';\r\nimport { RequirePermission } from '../../auth/decorator/RolesDecorator';\r\nimport { PaginationUtil } from '../../utils';\r\n\r\n@Controller()\r\nexport class ProductController {\r\n  constructor(private productService: ProductService) { }\r\n\r\n\r\n  // @UseGuards(RolesGuard)\r\n  // @RequirePermission(Permission.BANNER_VIEW)\r\n  @Get(ProductEndpoints.Find)\r\n  async find(@Query() payload: Product_FindDTO): Promise<PaginationResultDTO<Product_InfoItemDTO>> {\r\n    const { _keyword } = payload;\r\n    const { page, limit } = PaginationUtil.parseFromDTO(payload);\r\n    const result = await this.productService.find(payload);\r\n\r\n    return PaginationUtil.transformToPaginationResult<Product_InfoItemDTO>(\r\n      result.result,\r\n      page,\r\n      limit,\r\n      result._total\r\n    )\r\n\r\n  }\r\n\r\n  // @UseGuards(RolesGuard)\r\n  // @RequirePermission(Permission.BANNER_VIEW)\r\n  @Get(ProductEndpoints.FindOne)\r\n  async findOne(@Query() payload: Product_FindOneDTO): Promise<Product_InfoDetailDTO> {\r\n    return await this.productService.findOne(payload.id);\r\n  };\r\n\r\n  // @UseGuards(RolesGuard)\r\n  // @RequirePermission(Permission.BANNER_CREATE)\r\n  @Post(ProductEndpoints.Create)\r\n  async create(@Body() payload: Product_UpsertDTO): Promise<Message_Response> {\r\n\r\n    return await this.productService.create({\r\n      product_name: payload.product_name,\r\n      product_density: payload.product_density,\r\n      created_by: payload.created_by\r\n    })\r\n  }\r\n\r\n  // @UseGuards(RolesGuard)\r\n  // @RequirePermission(Permission.BANNER_UPDATE)\r\n  @Put(ProductEndpoints.Update)\r\n  async update(@Body() payload: Product_UpsertDTO): Promise<Message_Response> {\r\n\r\n    return await this.productService.update({\r\n      id: payload.id,\r\n      product_name: payload.product_name,\r\n      product_density: payload.product_density,\r\n      created_by: payload.created_by,\r\n      updated_by: payload.updated_by\r\n    })\r\n  }\r\n\r\n  // @UseGuards(RolesGuard)\r\n  // @RequirePermission(Permission.BANNER_DELETE)\r\n  @Delete(ProductEndpoints.Delete)\r\n  async delete(@Query() idBanner: Product_DeleteDTO): Promise<Message_Response> {\r\n    return await this.productService.delete(idBanner.id);\r\n  }\r\n}\r\n","import { Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { JwtService } from \"@nestjs/jwt\";\r\nimport { UserModule } from \"../users\";\r\nimport { User, UserSchema } from \"../users/UserSchema\";\r\nimport { Product, ProductSchema } from \"./ProductSchema\";\r\nimport { ProductController } from \"./ProductController\";\r\nimport { ProductService } from \"./ProductService\";\r\n\r\n@Module({\r\n    imports: [\r\n        UserModule,\r\n        MongooseModule.forFeature(\r\n            [{ name: Product.name, schema: ProductSchema }, { name: User.name, schema: UserSchema }],\r\n        ),\r\n    ],\r\n    controllers: [ProductController],\r\n    providers: [ProductService, JwtService],\r\n    exports: [ProductService]\r\n})\r\nexport class ProductModule { }","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\r\nimport { HydratedDocument, Types } from \"mongoose\";\r\n\r\nexport type ProductDocument = HydratedDocument<Product>\r\n\r\n@Schema({ versionKey: false })\r\nexport class Product {\r\n\r\n    @Prop()\r\n    _id: Types.ObjectId;\r\n\r\n    @Prop()\r\n    ProductName: string;\r\n\r\n    @Prop()\r\n    ProductDensity: string;\r\n\r\n    @Prop()\r\n    CreatedAt: Date;\r\n\r\n    @Prop()\r\n    CreatedBy: string;\r\n\r\n    @Prop()\r\n    UpdatedAt: Date;\r\n\r\n    @Prop()\r\n    UpdateBy: string;\r\n\r\n    @Prop({ default: false })\r\n    IsDeleted: boolean;\r\n}\r\n\r\nexport const ProductSchema = SchemaFactory.createForClass(Product);","import { Injectable, Logger } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Product } from './ProductSchema';\r\nimport { Model, Types } from 'mongoose';\r\nimport { Message_Response, PaginationResultDTO, Product_FindDTO, Product_InfoDetailDTO, Product_InfoItemDTO, Product_UpsertDTO } from '@global-victory/erp/api-interfaces';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n\r\n    constructor(@InjectModel(Product.name) private productModel: Model<Product>) {\r\n\r\n    }\r\n\r\n    async find(dto: Product_FindDTO): Promise<PaginationResultDTO<Product_InfoItemDTO>> {\r\n\r\n        try {\r\n            const { _page, _limit, _keyword } = dto;\r\n\r\n            const regex = new RegExp([\".*\", _keyword, \".*\"].join(\"\"), \"i\");\r\n\r\n            const conditions = _keyword ? {\r\n                $and: [\r\n                    {\r\n                        $or: [\r\n                            { ProductName: regex }\r\n                        ]\r\n                    },\r\n                    { IsDeleted: false }\r\n                ]\r\n            } : null;\r\n            const totals: number = await this.productModel.count(conditions ? conditions : { IsDeleted: false })\r\n\r\n            const raw_data: Product[] = await this.productModel.find(conditions ? conditions : { IsDeleted: false }).sort({ CreatedAt: -1 }).skip((_page - 1) * _limit).limit(_limit).exec();\r\n\r\n            const users: Product_InfoItemDTO[] = raw_data.map((user_data: Product) => ({\r\n                id: user_data._id.toString(),\r\n                product_name: user_data.ProductName,\r\n                product_density: user_data.ProductDensity,\r\n                updated_at: user_data.UpdatedAt,\r\n            }))\r\n\r\n            return {\r\n                result: users,\r\n                _total: totals,\r\n                _page: _page,\r\n                _limit: _limit,\r\n                _total_page: totals / _limit,\r\n                _next_page: _page + 1,\r\n                _prev_page: _page - 1\r\n            };\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    }\r\n\r\n\r\n    async findOne(id: string): Promise<Product_InfoDetailDTO> {\r\n\r\n        try {\r\n            const productDetail = await this.productModel.findById(new Types.ObjectId(id));\r\n\r\n            return {\r\n                id: productDetail._id.toString(),\r\n                product_name: productDetail.ProductName,\r\n                product_density: productDetail.ProductDensity,\r\n                created_at: productDetail.CreatedAt,\r\n                created_by: productDetail.CreatedBy,\r\n                updated_by: productDetail.UpdateBy,\r\n                updated_at: productDetail.UpdatedAt\r\n            };\r\n        } catch (error) {\r\n            Logger.error(error)\r\n\r\n        }\r\n    }\r\n\r\n    async create(dto: Product_UpsertDTO): Promise<Message_Response> {\r\n        try {\r\n            const entity: Product = {\r\n                _id: new Types.ObjectId(dto.id),\r\n                ProductName: dto.product_name,\r\n                ProductDensity: dto.product_density,\r\n                CreatedAt: new Date(),\r\n                CreatedBy: dto.created_by,\r\n                UpdatedAt: new Date(),\r\n                UpdateBy: dto.updated_by,\r\n                IsDeleted: dto.is_deleted,\r\n            }\r\n            await new this.productModel(entity).save();\r\n\r\n            return {\r\n                status: \"success\",\r\n                message: \"Create Product Successfuly \",\r\n                title: \"Success\"\r\n            }\r\n        } catch (error) {\r\n            Logger.error(error)\r\n\r\n        }\r\n    }\r\n\r\n    async update(dto: Product_UpsertDTO): Promise<Message_Response> {\r\n        try {\r\n            const productUpdate = await this.findOne(dto.id);\r\n\r\n            const entity: Product = {\r\n                _id: new Types.ObjectId(productUpdate.id),\r\n                ProductName: dto.product_name,\r\n                ProductDensity: dto.product_density,\r\n                CreatedAt: new Date(),\r\n                CreatedBy: dto.created_by,\r\n                UpdatedAt: new Date(),\r\n                UpdateBy: dto.updated_by,\r\n                IsDeleted: dto.is_deleted,\r\n            }\r\n\r\n            await this.productModel.updateOne({ _id: new Types.ObjectId(entity._id) }, { $set: entity })\r\n\r\n            return {\r\n                status: \"success\",\r\n                message: \"Create Product Successfuly \",\r\n                title: \"Succes\"\r\n            }\r\n        } catch (error) {\r\n            Logger.error(error)\r\n\r\n        }\r\n    }\r\n\r\n    async delete(id: string): Promise<Message_Response> {\r\n        try {\r\n            await this.productModel.findOneAndUpdate({ _id: new Types.ObjectId(id) }, { $set: { IsDeleted: true } });\r\n            return {\r\n                status: \"success\",\r\n                message: \"Delete Product Successfully\",\r\n                title: \"Succes\"\r\n            }\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    }\r\n}\r\n","export * from './ProductModule'","import { RoleEndpoints, Role_CreateDTO, Role_deleteDTO, Role_FindOneDTO, Role_InfoDTO, Role_UpdateDTO, Role_FindPermissionOfUserDTO, } from \"@global-victory/erp/api-interfaces\";\r\nimport { Body, Controller, Delete, Get, Post, Put, Query, UseGuards } from \"@nestjs/common\";\r\nimport { Message_Response } from \"libs/erp/api-interfaces/src/utils\";\r\nimport { RoleService } from \"./RoleService\";\r\nimport { RolesGuard } from \"../../auth/guard/RolesGuard\";\r\nimport { RequirePermission } from \"../../auth/decorator/RolesDecorator\";\r\nimport { Permission } from \"libs/erp/api-interfaces/src/utils/Enum\";\r\n\r\n@Controller()\r\nexport class RoleController {\r\n\r\n    constructor(private roleService: RoleService) { };\r\n\r\n    @UseGuards(RolesGuard)\r\n    @RequirePermission(Permission.ROLE_VIEW)\r\n    @Get(RoleEndpoints.Find)\r\n    async find(): Promise<Role_InfoDTO[]> {\r\n        return await this.roleService.find();\r\n    };\r\n\r\n    @Get(RoleEndpoints.FindOne)\r\n    async findOne(@Query() payload: Role_FindOneDTO): Promise<Role_InfoDTO> {\r\n        console.log(payload.id);\r\n\r\n        return await this.roleService.findOne(payload.id);\r\n    };\r\n\r\n    @Get(RoleEndpoints.FindPermissionOfUserByEmail)\r\n    async findPrmissionOfUserByEmail(@Query() payload: Role_FindPermissionOfUserDTO): Promise<Array<string>> {\r\n        return await this.roleService.findPermissionByEmailUser(payload.email);\r\n    };\r\n\r\n    @UseGuards(RolesGuard)\r\n    @RequirePermission(Permission.ROLE_CREATE)\r\n    @Post(RoleEndpoints.Create)\r\n    async create(@Body() payload: Role_CreateDTO): Promise<Message_Response> {\r\n        console.log(payload)\r\n        return await this.roleService.create({\r\n            id: payload.id,\r\n            name: payload.name,\r\n            permissions: payload.permissions,\r\n            created_at: payload.created_at,\r\n            created_by: payload.created_by,\r\n            updated_at: payload.updated_at,\r\n            updated_by: payload.updated_by\r\n        })\r\n    };\r\n\r\n    @UseGuards( RolesGuard)\r\n    @RequirePermission(Permission.ROLE_UPDATE)\r\n    @Put(RoleEndpoints.Update)\r\n    async update(@Body() payload: Role_UpdateDTO): Promise<Message_Response> {\r\n        return await this.roleService.update(payload);\r\n    };\r\n\r\n    @UseGuards( RolesGuard)\r\n    @RequirePermission(Permission.ROLE_DELETE)\r\n    @Delete(RoleEndpoints.Delete)\r\n    async delete(@Query() query: Role_deleteDTO): Promise<Message_Response> {\r\n        return await this.roleService.delete(query.id);\r\n    };\r\n} ","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { RoleController } from './RoleController';\r\nimport { Role, RoleSchema } from './RoleSchema';\r\nimport { RoleService } from './RoleService';\r\nimport { UserModule } from '../users';\r\nimport { User, UserSchema } from '../users/UserSchema';\r\nimport { JwtService } from '@nestjs/jwt';\r\n\r\n@Module({\r\n  imports: [\r\n    UserModule,\r\n    MongooseModule.forFeature(\r\n      [{ name: User.name, schema: UserSchema }, { name: Role.name, schema: RoleSchema }]\r\n    ),\r\n  ],\r\n  controllers: [RoleController],\r\n  providers: [RoleService, JwtService,],\r\n  exports: [RoleService],\r\n})\r\n\r\nexport class RoleModule { }\r\n\r\n","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\r\nimport { HydratedDocument } from \"mongoose\";\r\n\r\nexport type RoleDocument = HydratedDocument<Role>\r\n@Schema({ versionKey: false })\r\nexport class Role {\r\n\r\n    @Prop()\r\n    _id: string;\r\n\r\n    @Prop()\r\n    Name: string;\r\n\r\n    @Prop()\r\n    Permissions: Array<Object>;\r\n\r\n    @Prop()\r\n    CreatedAt: Date;\r\n\r\n    @Prop()\r\n    CreatedBy: string;\r\n\r\n    @Prop()\r\n    UpdatedAt: Date;\r\n\r\n    @Prop()\r\n    UpdatedBy: string;\r\n\r\n    @Prop()\r\n    IsDeleted: boolean;\r\n}\r\n\r\nexport const RoleSchema = SchemaFactory.createForClass(Role);\r\n","import { HttpException, HttpStatus, Injectable, Logger } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { Model } from \"mongoose\";\r\nimport { Role } from \"./RoleSchema\";\r\nimport { Role_CreateDTO, Role_InfoDTO, Role_UpdateDTO } from '@global-victory/erp/api-interfaces'\r\nimport { Message_Response } from \"libs/erp/api-interfaces/src/utils\";\r\nimport { APP_CONSTANT_PERMISSIONS, Permission } from \"libs/erp/api-interfaces/src/modules/roles/RolePermissions\"\r\nimport { UserService } from \"../users/UserService\";\r\nimport { User } from \"../users/UserSchema\";\r\n\r\n@Injectable()\r\nexport class RoleService {\r\n    constructor(\r\n        @InjectModel(Role.name) private roleModel: Model<Role>,\r\n        private userService: UserService,\r\n        @InjectModel(User.name) private userModel: Model<User>\r\n    ) { };\r\n    async find(): Promise<Role_InfoDTO[]> {\r\n        try {\r\n            const data: Role[] = await this.roleModel.find({ IsDeleted: false });\r\n            const result: Role_InfoDTO[] = data.map((role_data: Role) => ({\r\n                id: role_data._id,\r\n                name: role_data.Name,\r\n                permissions: role_data.Permissions,\r\n                created_at: role_data.CreatedAt,\r\n                created_by: role_data.CreatedBy,\r\n                updated_at: role_data.UpdatedAt,\r\n                updated_by: role_data.UpdatedBy,\r\n            }))\r\n            return result;\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    };\r\n\r\n    async findOne(id: string): Promise<Role_InfoDTO> {\r\n        try {\r\n            const role_data = await this.roleModel.findById({ _id: id }, { IsDeleted: false });\r\n            return {\r\n                id: role_data._id,\r\n                name: role_data.Name,\r\n                permissions: role_data.Permissions,\r\n                created_at: role_data.CreatedAt,\r\n                created_by: role_data.CreatedBy,\r\n                updated_at: role_data.UpdatedAt,\r\n                updated_by: role_data.UpdatedBy,\r\n            }\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    };\r\n\r\n    async findPermissionByEmailUser(email: string): Promise<Array<string>> {\r\n        try {\r\n            let listPermissionsOfUser = [];\r\n            const user = await this.userModel.findOne({ Email: email });\r\n            const roleOfUser = await this.roleModel.findById({ _id: user.Role._id }, { IsDeleted: false });\r\n            roleOfUser.Permissions.forEach(permission => {\r\n                listPermissionsOfUser.push(Object.values(permission)[0])\r\n            });\r\n            return listPermissionsOfUser;\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    }\r\n\r\n    async create(dto: Role_CreateDTO): Promise<Message_Response> {\r\n        try {\r\n            const checkIdRole = await this.roleModel.exists({ _id: dto.id });\r\n            const checkNameRole = await this.roleModel.exists({ Name: dto.name });\r\n            if (checkIdRole) {\r\n                throw new HttpException({ status: \"error\", message: 'Role id already exists', title: \"Errors\" }, HttpStatus.BAD_REQUEST)\r\n            }\r\n            if (checkNameRole) {\r\n                throw new HttpException({ status: \"error\", message: 'Role name already exists', title: \"Errors\" }, HttpStatus.BAD_REQUEST)\r\n            }\r\n            const role: Role = {\r\n                _id: dto.id,\r\n                Name: dto.name,\r\n                Permissions: dto.permissions,\r\n                CreatedAt: new Date(),\r\n                CreatedBy: dto.created_by,\r\n                UpdatedAt: new Date(),\r\n                UpdatedBy: null,\r\n                IsDeleted: false,\r\n            }\r\n            await new this.roleModel(role).save();\r\n            const message_response: Message_Response = {\r\n                status: \"success\",\r\n                title: \"Succes\",\r\n                message: \"Create role successfully\"\r\n            }\r\n            return message_response;\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    };\r\n\r\n    async update(dto: Role_UpdateDTO): Promise<Message_Response> {\r\n        try {\r\n            const currentRole = await this.findOne(dto.id);\r\n            const arrayPermissions = currentRole.permissions;\r\n            const permission: string = '@Permission/' + dto.module + '/' + dto.permission;\r\n\r\n            for (let i = 0; i < APP_CONSTANT_PERMISSIONS.length; i++) {\r\n                if (APP_CONSTANT_PERMISSIONS[i].id === permission) {\r\n                    if (dto.action) {\r\n                        arrayPermissions.push(APP_CONSTANT_PERMISSIONS[i])\r\n                    } else {\r\n                        const array: Permission[] = arrayPermissions.map((item: Permission) => ({\r\n                            id: item.id,\r\n                            name: item.name,\r\n                        }));\r\n                        arrayPermissions.splice(array.map(item => item.id).indexOf(APP_CONSTANT_PERMISSIONS[i].id), 1);\r\n                    }\r\n                }\r\n            }\r\n            const role: Role = {\r\n                _id: currentRole.id,\r\n                Name: currentRole.name,\r\n                Permissions: arrayPermissions,\r\n                CreatedAt: currentRole.created_at,\r\n                CreatedBy: currentRole.created_by,\r\n                UpdatedAt: new Date(),\r\n                UpdatedBy: currentRole.updated_by,\r\n                IsDeleted: false\r\n            }\r\n            this.userService.updateRoleInUser(role.Name, role);\r\n            await this.roleModel.updateOne({ _id: currentRole.id }, { $set: role });\r\n\r\n\r\n            const message_response: Message_Response = {\r\n                status: \"success\",\r\n                title: \"Succes\",\r\n                message: \"Update role successfully\"\r\n            }\r\n            return message_response;\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    };\r\n\r\n    async delete(id: string): Promise<Message_Response> {\r\n        try {\r\n            const currentRole = await this.findOne(id);\r\n            await this.roleModel.findOneAndUpdate({ _id: id }, { IsDeleted: true });\r\n            const message_response: Message_Response = {\r\n                status: \"success\",\r\n                title: \"Succes\",\r\n                message: \"Delete role successfully\"\r\n            }\r\n            return message_response;\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    };\r\n}\r\n","export * from './RoleModule';\r\n","import { BannerEndpoints, NewsEndpoints, UserEndpoints } from '@global-victory/erp/api-interfaces';\r\nimport { BadRequestException, Controller, Get, Post, UploadedFile, UseInterceptors } from '@nestjs/common';\r\nimport { FileInterceptor } from '@nestjs/platform-express';\r\nimport { diskStorage } from 'multer';\r\nimport path from 'path';\r\nimport { UploadService } from './UploadService';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { PATH_FILE_AVATAR_UPLOAD, PATH_FILE_BANNER_UPLOAD, PATH_FILE_NEWS_UPLOAD } from 'libs/erp/api-interfaces/src/_shared/pathFile';\r\nimport { Upload_DetailDTO, UploadEndpoints } from '@global-victory/erp/api-interfaces'\r\n\r\n@Controller()\r\nexport class UploadController {\r\n\r\n    constructor(private uploadService: UploadService) { }\r\n\r\n    @Get(UploadEndpoints.Find)\r\n    async findAllUpload(): Promise<Upload_DetailDTO[]> {\r\n        return this.uploadService.findAll();\r\n    }\r\n\r\n    @Post(`${UserEndpoints.UploadFile}|${NewsEndpoints.UploadFile}|${BannerEndpoints.UploadFile}`)\r\n    @UseInterceptors(FileInterceptor('upload', {\r\n        storage: diskStorage({\r\n            destination: (req, file, cb) => {\r\n                let endpoint = req.originalUrl.split('api/').pop();\r\n                let uploadPath = '';\r\n                if (endpoint === UserEndpoints.UploadFile) {\r\n                    uploadPath = PATH_FILE_AVATAR_UPLOAD;\r\n                } else if (endpoint === NewsEndpoints.UploadFile) {\r\n                    uploadPath = PATH_FILE_NEWS_UPLOAD;\r\n                }\r\n                else if (endpoint === BannerEndpoints.UploadFile) {\r\n                    uploadPath = PATH_FILE_BANNER_UPLOAD;\r\n                }\r\n                else {\r\n                    return cb(new BadRequestException('Invalid endpoint'), null);\r\n                }\r\n                cb(null, uploadPath);\r\n            },\r\n            filename: (req, upload, callback) => {\r\n                const generator_name = (uuidv4() + path.parse(upload.originalname).name.replace(/\\s/g, '')).trim();\r\n                const extension = path.parse(upload.originalname).ext;\r\n                const name = (generator_name + extension).trim()\r\n                callback(null, name)\r\n            },\r\n        }),\r\n        limits: { fileSize: 1024 * 1024 * 2 },\r\n\r\n        fileFilter(req, file, callback) {\r\n            if (!file.originalname.match(/\\.(jpg|jpeg|png)$/)) {\r\n                return callback(new BadRequestException('Only image files are allowed!'), false);\r\n            }\r\n            callback(null, true)\r\n        },\r\n    }\r\n    ))\r\n\r\n    async uploadFile(@UploadedFile() file: Express.Multer.File): Promise<Object> {\r\n        return await this.uploadService.upload(file);\r\n    }\r\n}","import { Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { Upload, UploadSchema } from './UploadSchema';\r\nimport { UploadController } from './UploadController';\r\nimport { UploadService } from './UploadService';\r\n\r\n@Module({\r\n    imports: [\r\n        MongooseModule.forFeature(\r\n            [{ name: Upload.name, schema: UploadSchema }],\r\n        ),\r\n    ],\r\n    controllers: [UploadController],\r\n    providers: [UploadModule, UploadService],\r\n    exports: [UploadService, UploadModule],\r\n})\r\n\r\nexport class UploadModule { }","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\r\nimport { HydratedDocument, Types } from \"mongoose\";\r\n\r\nexport type UserDocument = HydratedDocument<Upload>;\r\n\r\n@Schema({ versionKey: false })\r\nexport class Upload {\r\n\r\n    @Prop()\r\n    _id?: Types.ObjectId;\r\n\r\n    @Prop()\r\n    OriginalName: string;\r\n\r\n    @Prop()\r\n    NewName: string;\r\n\r\n    @Prop()\r\n    CreatedAt: Date;\r\n\r\n    @Prop()\r\n    TypeFile: string;\r\n}\r\n\r\nexport const UploadSchema = SchemaFactory.createForClass(Upload);","import { Injectable, Logger, UploadedFile } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { Model, Types } from \"mongoose\";\r\nimport { Upload, } from \"./UploadSchema\";\r\nimport { Upload_DetailDTO } from \"@global-victory/erp/api-interfaces\";\r\n\r\n@Injectable()\r\n\r\nexport class UploadService {\r\n\r\n    constructor(@InjectModel(Upload.name) private uploadModel: Model<Upload>) { }\r\n\r\n    async findAll(): Promise<Upload_DetailDTO[]> {\r\n        try {\r\n            const upload: Upload[] = await this.uploadModel.find();\r\n            const uploadFile: Upload_DetailDTO[] = upload.map((fileUpload: Upload) => ({\r\n                original_name: fileUpload.OriginalName,\r\n                new_name: fileUpload.NewName,\r\n                created_at: fileUpload.CreatedAt,\r\n                type_file: fileUpload.TypeFile\r\n            }));\r\n            return uploadFile;\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    }\r\n\r\n    async upload(@UploadedFile() file: Express.Multer.File): Promise<Object> {\r\n        try {\r\n            const entity: Upload = {\r\n                _id: new Types.ObjectId(),\r\n                OriginalName: file.originalname,\r\n                NewName: file.filename,\r\n                CreatedAt: new Date(),\r\n                TypeFile: file.mimetype\r\n            }\r\n            await new this.uploadModel(entity).save();\r\n            return ({ imageFileName: file.filename });\r\n        } catch (error) {\r\n            Logger.error(error)\r\n        }\r\n    }\r\n}","import {\r\n  BaseMessageResponse,\r\n  PaginationResultDTO,\r\n  UserEndpoints,\r\n  User_DeleteDTO,\r\n  User_FindDTO,\r\n  User_FindOneDTO,\r\n  User_InfoDetailDTO,\r\n  User_InfoItemDTO,\r\n  User_UpsertDTO,\r\n} from '@global-victory/erp/api-interfaces';\r\nimport {\r\n  Body,\r\n  Controller,\r\n  Delete,\r\n  Get,\r\n  Post,\r\n  Put,\r\n  Query,\r\n  Req,\r\n  UseGuards,\r\n} from '@nestjs/common';\r\nimport { PaginationUtil } from '../../utils';\r\nimport { UserService } from './UserService';\r\nimport { Permission, Role } from 'libs/erp/api-interfaces/src/utils/Enum'\r\nimport { RolesGuard } from '../../auth/guard/RolesGuard';\r\nimport { RequirePermission } from '../../auth/decorator/RolesDecorator';\r\nimport { Request } from 'express';\r\n\r\n@Controller()\r\nexport class UserController {\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  @UseGuards(RolesGuard)\r\n  @RequirePermission(Permission.USER_VIEW)\r\n  @Get(UserEndpoints.Find)\r\n  async find(\r\n    @Query() payload: User_FindDTO, @Req() req: Request\r\n  ): Promise<PaginationResultDTO<User_InfoItemDTO>> {\r\n    const { _keyword: keyword } = payload;\r\n    const { page, limit } = PaginationUtil.parseFromDTO(payload);\r\n    const result = await this.userService.find(payload);\r\n\r\n    return PaginationUtil.transformToPaginationResult<User_InfoItemDTO>(\r\n      result.result,\r\n      page,\r\n      limit,\r\n      result._total,\r\n    );\r\n  };\r\n\r\n  @Get(UserEndpoints.FindOne)\r\n  async findOne(@Query() payload: User_FindOneDTO): Promise<User_InfoDetailDTO> {\r\n\r\n    const result = await this.userService.findOne(payload.email);\r\n\r\n    return {\r\n      display_name: result.display_name,\r\n      first_name: result.first_name,\r\n      last_name: result.last_name,\r\n      middle_name: result.middle_name,\r\n      email: result.email,\r\n      date_of_birth: result.date_of_birth,\r\n      address: result.address,\r\n      phone: result.phone,\r\n      avatar_url: result.avatar_url,\r\n      created_at: result.created_at,\r\n      updated_at: result.updated_at,\r\n      created_by: result.created_by,\r\n      updated_by: result.updated_by,\r\n      role: result.role,\r\n    };\r\n  };\r\n\r\n  @UseGuards(RolesGuard)\r\n  @RequirePermission(Permission.USER_CREATE)\r\n  @Post(UserEndpoints.Create)\r\n  async create(@Body() payload: User_UpsertDTO): Promise<BaseMessageResponse> {\r\n\r\n    return await this.userService.create({\r\n      display_name: payload.display_name,\r\n      first_name: payload.first_name,\r\n      last_name: payload.last_name,\r\n      middle_name: payload.middle_name,\r\n      email: payload.email,\r\n      date_of_birth: payload.date_of_birth,\r\n      address: payload.address,\r\n      phone: payload.phone,\r\n      avatar_url: payload.avatar_url,\r\n      role: payload.role,\r\n      password: payload.password,\r\n      created_at: payload.created_at,\r\n      updated_at: payload.updated_at,\r\n      created_by: payload.created_by,\r\n    });\r\n\r\n  };\r\n\r\n  @UseGuards(RolesGuard)\r\n  @RequirePermission(Permission.USER_UPDATE)\r\n  @Put(UserEndpoints.Update)\r\n  async update(@Body() payload: User_UpsertDTO): Promise<BaseMessageResponse> {\r\n    return await this.userService.update({\r\n      id: payload.id,\r\n      display_name: payload.display_name,\r\n      first_name: payload.first_name,\r\n      last_name: payload.last_name,\r\n      middle_name: payload.middle_name,\r\n      email: payload.email,\r\n      date_of_birth: payload.date_of_birth,\r\n      password: payload.password,\r\n      address: payload.address,\r\n      phone: payload.phone,\r\n      role: payload.role,\r\n      avatar_url: payload.avatar_url,\r\n      created_at: payload.created_at,\r\n      updated_at: payload.updated_at,\r\n      updated_by: payload.updated_by,\r\n    });\r\n  };\r\n\r\n  @UseGuards(RolesGuard)\r\n  @RequirePermission(Permission.USER_DELETE)\r\n  @Delete(UserEndpoints.Delete)\r\n  async delete(@Query() query: User_DeleteDTO): Promise<BaseMessageResponse> {\r\n    return await this.userService.delete(query.email);\r\n  };\r\n}\r\n\r\n\r\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { UserController } from './UserController';\r\nimport { User, UserSchema } from './UserSchema';\r\nimport { UserService } from './UserService';\r\nimport { Role, RoleSchema } from '../roles/RoleSchema';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { AuthService } from '../../auth/AuthService';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature(\r\n      [{ name: User.name, schema: UserSchema }, { name: Role.name, schema: RoleSchema }]),\r\n  ],\r\n  controllers: [UserController],\r\n  providers: [UserService, JwtService, AuthService],\r\n  exports: [UserService],\r\n})\r\nexport class UserModule { }\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { HydratedDocument, Types } from 'mongoose';\r\nimport { Role } from '../roles/RoleSchema';\r\n\r\nexport type UserDocument = HydratedDocument<User>;\r\n\r\n@Schema({ versionKey: false })\r\nexport class User {\r\n\r\n  @Prop()\r\n  _id?: Types.ObjectId;\r\n\r\n  @Prop()\r\n  DisplayName: string\r\n\r\n  @Prop()\r\n  FristName: string;\r\n\r\n  @Prop()\r\n  LastName: string;\r\n\r\n  @Prop()\r\n  MiddleName: string;\r\n\r\n  @Prop()\r\n  DateOfBirth: Date;\r\n\r\n  @Prop()\r\n  Address: string;\r\n\r\n  @Prop()\r\n  Phone: string;\r\n\r\n  @Prop()\r\n  AvatarUrl: string;\r\n\r\n  @Prop()\r\n  CreatedAt: Date;\r\n\r\n  @Prop()\r\n  UpdatedAt: Date;\r\n\r\n  @Prop()\r\n  Email: string;\r\n\r\n  @Prop()\r\n  Password: string;\r\n\r\n  @Prop()\r\n  Role: Role;\r\n\r\n  @Prop({ default: false })\r\n  IsDeleted: boolean\r\n\r\n  @Prop()\r\n  CreatedBy: string;\r\n\r\n  @Prop()\r\n  UpdatedBy: string;\r\n\r\n  @Prop()\r\n  RefreshToken: string\r\n}\r\n\r\nexport const UserSchema = SchemaFactory.createForClass(User);\r\n","import { BaseMessageResponse, PaginationResultDTO, User_FindDTO, User_InfoDetailDTO } from '@global-victory/erp/api-interfaces';\r\nimport { Injectable, HttpException, HttpStatus, Logger } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model, Types } from 'mongoose';\r\nimport { User } from './UserSchema';\r\nimport bcrypt from 'bcrypt';\r\nimport { PATH_AVATAR_DEFAULT } from '../../../../../../../libs/erp/api-interfaces/src/_shared/pathFile';\r\nimport { REGEXP_ADDRESS, REGEXP_EMAIL, REGEXP_LETTER, REGEXP_PASSWORD, REGEXP_PHONE } from './../../utils/ValidateUtil';\r\nimport { Role } from '../roles/RoleSchema';\r\n\r\ntype UserDefined = {\r\n  id?: string;\r\n  display_name: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  middle_name: string;\r\n  email: string;\r\n  date_of_birth: Date;\r\n  age?: number;\r\n  address: string;\r\n  phone: string;\r\n  role?: string;\r\n  avatar_url: string;\r\n  created_at?: Date;\r\n  updated_at?: Date;\r\n  password?: string;\r\n  isDeleted?: boolean;\r\n  created_by?: string;\r\n  updated_by?: string;\r\n};\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  constructor(\r\n    @InjectModel(User.name) private userModel: Model<User>,\r\n    @InjectModel(Role.name) private roleModel: Model<Role>,\r\n    ) { }\r\n\r\n  async find(dto: User_FindDTO): Promise<PaginationResultDTO<User_InfoDetailDTO>> {\r\n\r\n    try {\r\n\r\n      const { _page, _limit, _keyword } = dto;\r\n\r\n      const regex = new RegExp([\".*\", _keyword, \".*\"].join(\"\"), \"i\");\r\n\r\n      const conditions = _keyword ? {\r\n        $and: [\r\n          {\r\n            $or: [\r\n              { Email: regex },\r\n              { DisplayName: regex },\r\n              { Phone: new RegExp(_keyword) }\r\n            ]\r\n          },\r\n          { IsDeleted: false }\r\n        ]\r\n      } : null;\r\n\r\n      const totals: number = await this.userModel.count(conditions ? conditions : { IsDeleted: false })\r\n\r\n      const raw_data: User[] = await this.userModel.find(conditions ? conditions : { IsDeleted: false }).skip((_page - 1) * _limit).limit(_limit).exec();\r\n\r\n      const users: User_InfoDetailDTO[] = raw_data.map((user_data: User) => ({\r\n        id: user_data._id.toString(),\r\n        display_name: user_data.DisplayName,\r\n        first_name: user_data.FristName,\r\n        last_name: user_data.LastName,\r\n        middle_name: user_data.MiddleName,\r\n        email: user_data.Email,\r\n        date_of_birth: user_data.DateOfBirth,\r\n        address: user_data.Address,\r\n        phone: user_data.Phone,\r\n        avatar_url: user_data.AvatarUrl,\r\n        created_at: user_data.CreatedAt,\r\n        updated_at: user_data.UpdatedAt,\r\n        created_by: user_data.CreatedBy,\r\n        isDeleted: user_data.IsDeleted,\r\n      }))\r\n\r\n      return {\r\n        result: users,\r\n        _total: totals,\r\n        _page: _page,\r\n        _limit: _limit,\r\n        _total_page: totals / _limit,\r\n        _next_page: _page + 1,\r\n        _prev_page: _page - 1\r\n      };\r\n    }\r\n    catch (error) {\r\n      Logger.error(error)\r\n    }\r\n  }\r\n\r\n  async findOne(email: string): Promise<UserDefined> {\r\n\r\n    try {\r\n      const userDetail = await this.userModel.findOne({ 'Email': email });\r\n\r\n      return {\r\n        id: userDetail._id.toString(),\r\n        display_name: userDetail.DisplayName,\r\n        first_name: userDetail.FristName,\r\n        last_name: userDetail.LastName,\r\n        middle_name: userDetail.MiddleName,\r\n        email: userDetail.Email,\r\n        date_of_birth: userDetail.DateOfBirth,\r\n        address: userDetail.Address,\r\n        phone: userDetail.Phone,\r\n        role: userDetail.Role.Name,\r\n        avatar_url: userDetail.AvatarUrl,\r\n        created_at: userDetail.CreatedAt,\r\n        updated_at: userDetail.UpdatedAt,\r\n        created_by: userDetail.CreatedBy,\r\n        updated_by: userDetail.UpdatedBy\r\n      };\r\n    } catch (error) {\r\n      Logger.error(error)\r\n    }\r\n  }\r\n\r\n  async create(dto: UserDefined): Promise<BaseMessageResponse> {\r\n\r\n    try {\r\n\r\n      const checkEmail = await this.userModel.exists({ 'Email': dto.email });\r\n      const checkPhone = await this.userModel.exists({ 'Phone': dto.phone });\r\n\r\n      const getRole = await this.roleModel.findOne({ 'Name': dto.role }).select('-IsDeleted -CreatedAt -UpdatedAt -CreatedBy -UpdatedBy').exec()\r\n\r\n\r\n      if (checkEmail && checkPhone) {\r\n        throw new HttpException({ status: \"error\", message: 'Email and Phone number already exists', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n      } else {\r\n        if (checkEmail) {\r\n          throw new HttpException({ status: \"error\", message: 'Email already exists', title: \"Errors\" }, HttpStatus.BAD_REQUEST)\r\n        }\r\n        if (checkPhone) {\r\n          throw new HttpException({ status: \"error\", message: 'Phone number already exists', title: \"Errors\" }, HttpStatus.BAD_REQUEST)\r\n        }\r\n\r\n        if (!REGEXP_LETTER.test(dto.display_name)) {\r\n          throw new HttpException({ status: \"error\", message: 'Invalid DisplayName !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n        }\r\n        if (!REGEXP_LETTER.test(dto.first_name)) {\r\n          throw new HttpException({ status: \"error\", message: 'Invalid FirstName !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n        }\r\n        if (!REGEXP_LETTER.test(dto.last_name)) {\r\n          throw new HttpException({ status: \"error\", message: 'Invalid LastName !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n        }\r\n        if (!REGEXP_LETTER.test(dto.middle_name)) {\r\n          throw new HttpException({ status: \"error\", message: 'Invalid MiddleName !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n        }\r\n        if (!REGEXP_EMAIL.test(dto.email)) {\r\n          throw new HttpException({ status: \"error\", message: 'Invalid Email !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n        }\r\n        if (dto.address) {\r\n          if (!REGEXP_ADDRESS.test(dto.address)) {\r\n            throw new HttpException({ status: \"error\", message: 'Invalid Address !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n          }\r\n        }\r\n        if (!REGEXP_PHONE.test(dto.phone)) {\r\n          throw new HttpException({ status: \"error\", message: 'Invalid Phone !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n        }\r\n        if (!REGEXP_PASSWORD.test(dto.password)) {\r\n          throw new HttpException({ status: \"error\", message: 'Invalid PassWord !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n        }\r\n\r\n\r\n        const salt = await bcrypt.genSalt(10);\r\n        const hash_password = await bcrypt.hash(dto.password, salt);\r\n        dto.password = hash_password;\r\n\r\n\r\n        const entity: User = {\r\n          _id: new Types.ObjectId(),\r\n          DisplayName: dto.display_name,\r\n          Password: dto.password,\r\n          FristName: dto.first_name,\r\n          LastName: dto.last_name,\r\n          MiddleName: dto.middle_name,\r\n          Email: dto.email,\r\n          DateOfBirth: dto.date_of_birth,\r\n          Address: dto.address,\r\n          Phone: dto.phone,\r\n          AvatarUrl: dto.avatar_url || PATH_AVATAR_DEFAULT,\r\n          Role: getRole,\r\n          CreatedAt: new Date(),\r\n          UpdatedAt: new Date(),\r\n          IsDeleted: false,\r\n          CreatedBy: dto.created_by,\r\n          UpdatedBy: dto.updated_by,\r\n          RefreshToken: ''\r\n        };\r\n\r\n        await new this.userModel(entity).save();\r\n\r\n        return {\r\n          status: \"success\",\r\n          message: \"Create User Successfuly \",\r\n          title: \"Success\"\r\n        }\r\n      }\r\n    } catch (error) {\r\n      Logger.error(error)\r\n    }\r\n  }\r\n\r\n  async update(data: UserDefined): Promise<BaseMessageResponse> {\r\n\r\n    try {\r\n      const user = await this.findOne(data.email);\r\n\r\n      const checkEmail = await this.userModel.exists({ 'Email': data.email });\r\n      const checkPhone = await this.userModel.exists({ 'Phone': data.phone });\r\n      const passWordMath = await this.userModel.findOne({ 'Email': data.email });\r\n      const getRefreshToken = await this.userModel.findOne({ 'Email': data.email });\r\n      const getRole = await this.roleModel.findOne({ 'Name': data.role }).select('-IsDeleted -CreatedAt -UpdatedAt -CreatedBy -UpdatedBy').exec()\r\n\r\n      if (user.email != data.email) {\r\n        if (checkEmail) {\r\n          throw new HttpException({ status: \"Errors\", message: 'Email already exists', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n        }\r\n      }\r\n      if (user.phone != data.phone) {\r\n        if (checkPhone) {\r\n          throw new HttpException({ status: \"Errors\", message: 'Phone already exists', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n        }\r\n      }\r\n\r\n      if (!REGEXP_LETTER.test(data.display_name)) {\r\n        throw new HttpException({ status: \"Error\", message: 'Invalid DisplayName !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n      }\r\n      if (!REGEXP_LETTER.test(data.first_name)) {\r\n        throw new HttpException({ status: \"Error\", message: 'Invalid FirstName !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n      }\r\n      if (!REGEXP_LETTER.test(data.last_name)) {\r\n        throw new HttpException({ status: \"Error\", message: 'Invalid LastName !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n      }\r\n      if (!REGEXP_LETTER.test(data.middle_name)) {\r\n        throw new HttpException({ status: \"Error\", message: 'Invalid MiddleName !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n      }\r\n      if (!REGEXP_EMAIL.test(data.email)) {\r\n        throw new HttpException({ status: \"Error\", message: 'Invalid Email !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n      }\r\n      if (data.address) {\r\n        if (!REGEXP_ADDRESS.test(data.address)) {\r\n          throw new HttpException({ status: \"Error\", message: 'Invalid Address !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n        }\r\n      }\r\n      if (!REGEXP_PHONE.test(data.phone)) {\r\n        throw new HttpException({ status: \"Error\", message: 'Invalid Phone !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n      }\r\n      if (data.password) {\r\n        if (!REGEXP_PASSWORD.test(data.password)) {\r\n          throw new HttpException({ status: \"Error\", message: 'Invalid PassWord !', title: \"Errors\" }, HttpStatus.BAD_REQUEST);\r\n        }\r\n        const salt = await bcrypt.genSalt(10);\r\n        const hash_password = await bcrypt.hash(data.password, salt);\r\n        data.password = hash_password;\r\n      }\r\n\r\n\r\n      const entity: User = {\r\n        _id: new Types.ObjectId(user.id),\r\n        DisplayName: data.display_name,\r\n        FristName: data.first_name,\r\n        LastName: data.last_name,\r\n        MiddleName: data.middle_name,\r\n        Email: data.email,\r\n        DateOfBirth: data.date_of_birth,\r\n        Address: data.address,\r\n        Phone: data.phone,\r\n        AvatarUrl: data.avatar_url,\r\n        Role: getRole,\r\n        Password: data.password == null ? passWordMath.Password : data.password,\r\n        CreatedAt: data.created_at,\r\n        UpdatedAt: new Date(),\r\n        IsDeleted: false,\r\n        CreatedBy: data.created_by,\r\n        UpdatedBy: data.updated_by,\r\n        RefreshToken: getRefreshToken.RefreshToken\r\n      }\r\n\r\n      await this.userModel.updateOne({ _id: new Types.ObjectId(user.id), }, { $set: entity });\r\n      return {\r\n        status: \"success\",\r\n        message: \"Update User Successfully\",\r\n        title: \"Success\"\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      Logger.error(error)\r\n    }\r\n  }\r\n\r\n  async delete(user_email: string): Promise<BaseMessageResponse> {\r\n\r\n    try {\r\n      const userDetail = await this.findOne(user_email);\r\n      await this.userModel.findOneAndUpdate({ _id: new Types.ObjectId(userDetail.id) }, { IsDeleted: true })\r\n      return {\r\n        status: \"success\",\r\n        message: \"Delete User Successfully\",\r\n        title: \"Success\"\r\n      }\r\n    } catch (error) {\r\n      Logger.error(error)\r\n    }\r\n  }\r\n\r\n  async updateRoleInUser(idRole: string, updatedRole: Role): Promise<void> {\r\n    try {\r\n      const users = await this.userModel.find({ 'Role.Name': idRole });\r\n      if (users.length > 0) {\r\n        const updatePromises = users.map(async (user) => {\r\n          user.Role = updatedRole;\r\n          await user.save();\r\n        });\r\n\r\n        await Promise.all(updatePromises);\r\n      }\r\n    } catch (error) {\r\n      Logger.error(error);\r\n    }\r\n  }\r\n\r\n  async updateRefreshTokenUser(email: string, refreshToken: string) {\r\n    try {\r\n      const user = await this.userModel.updateOne({ 'Email': email }, { $set: { 'RefreshToken': refreshToken } });\r\n      return user;\r\n    } catch (error) {\r\n      Logger.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","export * from './UserModule';\r\n","import {\r\n  PaginationDTO,\r\n  PaginationResultDTO\r\n} from '@global-victory/erp/api-interfaces';\r\nimport { GlobalConfig } from '../../config';\r\n\r\nconst defaultPage = GlobalConfig.Pagination.PageDefault;\r\nconst defaultLimit = GlobalConfig.Pagination.LimitDefault;\r\nconst maxLimitPerPage = GlobalConfig.Pagination.LimitMaximum;\r\n\r\nexport class PaginationUtil {\r\n  static parseFromDTO(dto: PaginationDTO): {\r\n    page: number;\r\n    limit: number;\r\n  } {\r\n    const { _limit, _page } = dto;\r\n    const page = isNaN(_page) ? defaultPage : +_page;\r\n    let limit = isNaN(_limit) ? defaultLimit : +_limit;\r\n\r\n    if (limit > maxLimitPerPage) limit = maxLimitPerPage;\r\n\r\n    return {\r\n      page,\r\n      limit,\r\n    };\r\n  }\r\n\r\n  static transformToPaginationResult<ResultDTO = unknown>\r\n    (result_list: ResultDTO[],\r\n      page: number,\r\n      limit: number,\r\n      total: number\r\n    ): PaginationResultDTO<ResultDTO> {\r\n    return {\r\n      _next_page: 1,\r\n      _prev_page: 1,\r\n      _total: total,\r\n      _total_page: total > limit ? ((Math.floor(total / limit) % 2 == 0) ? Math.floor(total / limit) : Math.floor(total / limit) + 1) : 1,\r\n      _page: page,\r\n      _limit: limit,\r\n      result: result_list,\r\n    };\r\n  }\r\n}\r\n","export const REGEXP_LETTER = /^[\\p{L}\\s'-]+$/u;\r\n\r\nexport const REGEXP_PHONE = /^(0?)(3[2-9]|5[6|8|9]|7[0|6-9]|8[0-6|8|9]|9[0-4|6-9])[0-9]{7}$/;\r\n\r\nexport const REGEXP_ADDRESS = /^[\\p{L}\\s0-9',\\/-]+$/u;\r\n\r\nexport const REGEXP_EMAIL = /^([\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4})?$/;\r\n\r\nexport const REGEXP_PASSWORD = /^(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{8,}$/;\r\n\r\n\r\n\r\n\r\n","export * from './PaginationUtil';\r\nexport * from './ValidateUtil';\r\n","export const GlobalConfig = {\r\n  Pagination: {\r\n    PageDefault: 1,\r\n    LimitDefault: 10,\r\n    LimitMaximum: 50,\r\n  },\r\n  Authentication: {\r\n    ServerKey: 'SAMPLE_SERVER_KEY',\r\n    ServerKeyRefresh: 'SAMPLE_SERVER_KEY_REFRESH',\r\n    ExpiresIn: '1d',\r\n    ExpiresInRefresh: '10d'\r\n  },\r\n  Database: {\r\n    MongoURI: process.env.MONGO_URI,\r\n  },\r\n  DIR: process.env.IS_DEV === 'true' ? process.cwd() : __dirname\r\n};\r\n","import { AuthEndpoints } from \"./auth\";\r\nimport { UserEndpoints } from \"./modules\";\r\n\r\nexport const APIEndpoints = {\r\n    Users: UserEndpoints,\r\n    Auth: AuthEndpoints\r\n}","export const HOST_API = 'http://localhost:3333'\r\n\r\nexport const PATH_FILES = '/uploads/'\r\nexport const PATH_FILE_AVATAR_UPLOAD = './uploads/avatar-user/'\r\nexport const PATH_FILE_NEWS_UPLOAD = './uploads/image-cover/'\r\nexport const PATH_FILE_BANNER_UPLOAD = './uploads/image-banner/'\r\nexport const PATH_AVATAR_DEFAULT = 'fa9decf0-421b-429a-9573-42b43a6e9806image_default.png'\r\n","import { IsEmail } from 'class-validator';\r\nimport { User_ResponseLogin } from '../modules';\r\n\r\nexport class Auth_SignInDTO {\r\n  // @IsEmail()\r\n  email!: string;\r\n\r\n  password!: string;\r\n}\r\n\r\nexport type Auth_Response = {\r\n  user: User_ResponseLogin,\r\n  access_token: string,\r\n  refresh_token: string\r\n  permissions: Array<string>,\r\n}\r\n","export const AuthEndpoints = {\r\n  SignIn: 'auth/sign-in',\r\n  SignOut: 'auth/sign-out',\r\n  GetMyInfo: 'auth/me',\r\n  Refresh: 'auth/refresh',\r\n  RemoveCookie: 'auth/remove-cookie'\r\n};\r\n","export * from './AuthEndpoint';\r\nexport * from './AuthDTOs';\r\n","export * from './types';\r\n","export type PaginationResultDTO<ResultDTO = unknown> = {\r\n  result: ResultDTO[];\r\n  _page: number | undefined;\r\n  _limit: number | undefined;\r\n  _total: number | undefined;\r\n  _total_page: number | undefined;\r\n  _next_page: number | undefined;\r\n  _prev_page: number | undefined;\r\n};\r\n\r\nexport type PaginationDTO<DTO = unknown> = {\r\n  _page: number | undefined;\r\n  _limit: number | undefined;\r\n} & DTO;\r\n\r\n\r\n","export * from './PaginationDTO';\r\n","export * from './APIEndpoints';\r\nexport * from './auth';\r\nexport * from './common';\r\nexport * from './modules';\r\nexport * from './utils';\r\n\r\n","import { IsNotEmpty, MaxLength } from \"class-validator\";\r\nimport { PaginationDTO } from \"../../common\";\r\n\r\n\r\n\r\nexport type Banner_InfoItemDTO = {\r\n    id: string;\r\n    banner_name: string;\r\n    banner_paragraph: string;\r\n    banner_image_url: string;\r\n    pin_top: boolean;\r\n    updated_at: Date;\r\n}\r\n\r\nexport type Banner_InfoDetailDTO = {\r\n    id: string;\r\n    banner_name: string;\r\n    banner_paragraph: string;\r\n    banner_image_url: string;\r\n    pin_top: boolean;\r\n    created_by: string;\r\n    created_at: Date;\r\n    updated_at: Date;\r\n    updated_by: string;\r\n}\r\n\r\nexport type Banner_CreateDTO = {\r\n    id?: string;\r\n    banner_name: string;\r\n    banner_paragraph: string;\r\n    banner_image_url: string;\r\n    pin_top: boolean;\r\n    created_by: null;\r\n}\r\n\r\nexport class Banner_UpsertDTO {\r\n\r\n    id?: string;\r\n\r\n    @IsNotEmpty()\r\n    // @MaxLength(20)\r\n    banner_name !: string;\r\n\r\n    @IsNotEmpty()\r\n    banner_paragraph!: string;\r\n\r\n    // @IsNotEmpty()\r\n    banner_image_url!: string;\r\n\r\n    @IsNotEmpty()\r\n    pin_top!: boolean;\r\n\r\n    created_at?: Date;\r\n\r\n    updated_at?: Date;\r\n\r\n    updated_by?: string;\r\n\r\n    created_by?: string;\r\n\r\n    is_deleted?: boolean;\r\n}\r\n\r\n\r\nexport type Banner_FindDTO = PaginationDTO<{\r\n    _keyword?: string;\r\n}>;\r\n\r\nexport type Banner_FindOneDTO = {\r\n    id: string;\r\n};\r\n\r\nexport type Banner_DeleteDTO = {\r\n    id: string;\r\n};\r\n\r\nexport type BannerListResponse = {\r\n    result: Banner_InfoItemDTO[],\r\n    _next_page: number,\r\n    _prev_page: number,\r\n    _total: number,\r\n    _total_page: number,\r\n    _page: number,\r\n    _limit: number,\r\n}","import { EndPointUtil } from '../../utils';\r\n\r\nconst prefixBannerModule = 'banners';\r\n\r\nconst extendEndpoint = {};\r\n\r\nexport const BannerEndpoints = {\r\n    ...EndPointUtil.generateCRUD(prefixBannerModule),\r\n    ...extendEndpoint,\r\n};","export * from './BannerDTOs';\r\nexport * from './BannerEndPoint';\r\n","export * from './users';\r\nexport * from './upload';\r\nexport * from './news';\r\nexport * from './roles';\r\nexport * from './products';\r\nexport * from './banners';\r\n","import { IsNotEmpty, MaxLength } from \"class-validator\";\r\nimport { PaginationDTO } from \"../../common\";\r\n\r\nexport type News_FindDTO = PaginationDTO<{\r\n    _keyword?: string;\r\n    _sortField?: string | null;\r\n    _sortOrder?: string | null;\r\n    _filterField?: string | null;\r\n    _filterValue?: string | Date[] | Array<string> | null\r\n}>;\r\n\r\nexport type News_InfoItemDTO = {\r\n\r\n    id: string;\r\n\r\n    title: string;\r\n\r\n    created_at: Date;\r\n\r\n    updated_at: Date;\r\n\r\n    hash_tag: Array<string>;\r\n\r\n    pinned_top: boolean;\r\n\r\n    created_by: string;\r\n}\r\n\r\nexport type News_List_Response = {\r\n    result: News_InfoItemDTO[],\r\n    _next_page: number,\r\n    _prev_page: number,\r\n    _total: number,\r\n    _total_page: number,\r\n    _page: number,\r\n    _limit: number,\r\n}\r\n\r\nexport type News_InfoDetailDTO = {\r\n\r\n    id: string;\r\n\r\n    title: string;\r\n\r\n    description: string;\r\n\r\n    rich_text_content: string;\r\n\r\n    image_cover_url: string;\r\n\r\n    hash_tag: Array<string>;\r\n\r\n    pinned_top: boolean;\r\n\r\n    created_at: Date;\r\n\r\n    created_by: string;\r\n\r\n    updated_at: Date;\r\n\r\n    updated_by: string;\r\n\r\n}\r\n\r\nexport class News_CreateDTO {\r\n\r\n    title!: string;\r\n\r\n    description!: string\r\n\r\n    rich_text_content!: string;\r\n\r\n    hash_tag?: Array<string>;\r\n\r\n    image_cover_url?: string;\r\n\r\n    pinned_top!: boolean;\r\n}\r\n\r\nexport class News_UpsertDTO {\r\n\r\n    id?: string;\r\n\r\n    @IsNotEmpty()\r\n    title!: string;\r\n\r\n    @IsNotEmpty()\r\n    description?: string\r\n\r\n    @IsNotEmpty()\r\n    rich_text_content!: string;\r\n\r\n    hash_tag?: Array<string>;\r\n\r\n    image_cover_url?: string;\r\n\r\n    pinned_top?: boolean;\r\n\r\n    created_at?: Date;\r\n\r\n    created_by?: string;\r\n\r\n    updated_at?: Date;\r\n\r\n    updated_by?: string;\r\n\r\n    is_deleted?: boolean;\r\n}\r\n\r\nexport type News_DeleteDTO = {\r\n    id: string;\r\n}\r\n\r\nexport type News_FindOneDTO = {\r\n    id: string;\r\n}\r\n\r\nexport type News_Defined = {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    rich_text_content: string;\r\n    image_cover_url: string;\r\n    hash_tag: string;\r\n    pinned_top: boolean;\r\n    created_at: Date;\r\n    updated_at: Date;\r\n    created_by: string;\r\n    updated_by: string;\r\n}\r\n\r\n// export class Message_Response {\r\n//     status!:string;\r\n//     title!:string;\r\n//     message!:string;\r\n// }","import { EndPointUtil } from '../../utils';\r\n\r\nconst prefixNewsModule = 'news';\r\n\r\nconst extendEndpoint = {};\r\n\r\nexport const NewsEndpoints = {\r\n  ...EndPointUtil.generateCRUD(prefixNewsModule),\r\n  ...extendEndpoint,\r\n};\r\n","export * from './NewsDTOs';\r\nexport * from './NewsEndpoint';\r\n","import { IsNotEmpty, MaxLength } from \"class-validator\";\r\nimport { PaginationDTO } from \"../../common\";\r\n\r\nexport type Product_InfoItemDTO = {\r\n    id: string;\r\n    product_name: string;\r\n    product_density: string;\r\n    updated_at: Date;\r\n}\r\n\r\nexport type Product_InfoDetailDTO = {\r\n    id: string;\r\n    product_name: string;\r\n    product_density: string;\r\n    created_by: string;\r\n    created_at: Date;\r\n    updated_at: Date;\r\n    updated_by: string;\r\n}\r\n\r\n\r\nexport class Product_UpsertDTO {\r\n\r\n    id?: string;\r\n\r\n    @IsNotEmpty()\r\n    product_name!: string;\r\n\r\n    @IsNotEmpty()\r\n    product_density!: string;\r\n\r\n    created_at?: Date;\r\n\r\n    updated_at?: Date;\r\n\r\n    updated_by?: string;\r\n\r\n    created_by?: string;\r\n\r\n    is_deleted?: boolean;\r\n}\r\n\r\n\r\nexport type Product_FindDTO = PaginationDTO<{\r\n    _keyword?: string;\r\n}>;\r\n\r\nexport type Product_FindOneDTO = {\r\n    id: string;\r\n};\r\n\r\nexport type Product_DeleteDTO = {\r\n    id: string;\r\n};\r\n\r\n\r\nexport type ProductListResponse = {\r\n    result: Product_InfoItemDTO[],\r\n    _next_page: number,\r\n    _prev_page: number,\r\n    _total: number,\r\n    _total_page: number,\r\n    _page: number,\r\n    _limit: number,\r\n}","import { EndPointUtil } from '../../utils';\r\n\r\nconst prefixProductModule = 'products';\r\n\r\nconst extendEndpoint = {};\r\n\r\nexport const ProductEndpoints = {\r\n    ...EndPointUtil.generateCRUD(prefixProductModule),\r\n    ...extendEndpoint,\r\n};","export * from './ProductDTOs';\r\nexport * from './ProductEndPoint';\r\n","export type Role_FindOneDTO = {\r\n    id: string;\r\n};\r\nexport type Role_FindPermissionOfUserDTO = {\r\n    email: string;\r\n};\r\n\r\nexport type Role_InfoItemDTO = {\r\n    id: string;\r\n    name: string;\r\n}\r\nexport type RolesListResponse = {\r\n    result: Role_InfoDTO[],\r\n    _next_page: number,\r\n    _prev_page: number,\r\n    _total: number,\r\n    _total_page: number,\r\n    _page: number,\r\n    _limit: number,\r\n\r\n}\r\n\r\nexport type Role_InfoDTO = {\r\n    id: string;\r\n    name?: string;\r\n    permissions: Array<Object>;\r\n    created_at?: Date;\r\n    created_by?: string;\r\n    updated_at?: Date;\r\n    updated_by?: string;\r\n}\r\n\r\nexport type Role_InfoDetailDTO = {\r\n    id: string;\r\n    name?: string;\r\n    created_at?: Date;\r\n    created_by?: string;\r\n    updated_at?: Date;\r\n    updated_by?: string;\r\n}\r\n\r\nexport type Role_UpdateDTO = {\r\n    id: string;\r\n    module: string;\r\n    permission: string;\r\n    action: boolean;\r\n}\r\n\r\nexport class Role_CreateDTO {\r\n    id?: string;\r\n    name?: string;\r\n    permissions?: [];\r\n    created_at?: Date;\r\n    created_by?: string;\r\n    updated_at?: Date;\r\n    updated_by?: string;\r\n}\r\n\r\nexport type Role_deleteDTO = {\r\n    id: string;\r\n}\r\n","import { EndPointUtil } from '../../utils';\r\n\r\nconst prefixRolesModule = 'roles';\r\n\r\nconst extendEndpoint = {};\r\n\r\nexport const RoleEndpoints = {\r\n  ...EndPointUtil.generateCRUD(prefixRolesModule),\r\n  ...extendEndpoint,\r\n};\r\n","export type Permission = {\r\n    id: string;\r\n    name:string;\r\n}\r\n\r\nexport const APP_CONSTANT_PERMISSIONS = [\r\n    {\r\n        id: '@Permission/User/View',\r\n        name: 'View a users list'\r\n    },\r\n    {\r\n        id: '@Permission/User/Create',\r\n        name: 'Create user'\r\n    },\r\n    {\r\n        id: '@Permission/User/Update',\r\n        name: 'Update user'\r\n    },\r\n    {\r\n        id: '@Permission/User/Delete',\r\n        name: 'Delete user'\r\n    },\r\n    {\r\n        id: '@Permission/Role/View',\r\n        name: 'View a roles list'\r\n    },\r\n    {\r\n        id: '@Permission/Role/Create',\r\n        name: 'Create role'\r\n    },\r\n    {\r\n        id: '@Permission/Role/Update',\r\n        name: 'Update role'\r\n    },\r\n    {\r\n        id: '@Permission/Role/Delete',\r\n        name: 'Delete role'\r\n    },\r\n    {\r\n        id: '@Permission/News/View',\r\n        name: 'View a news list'\r\n    },\r\n    {\r\n        id: '@Permission/News/Create',\r\n        name: 'Create news'\r\n    },\r\n    {\r\n        id: '@Permission/News/Update',\r\n        name: 'Update news'\r\n    },\r\n    {\r\n        id: '@Permission/News/Delete',\r\n        name: 'Delete news'\r\n    },\r\n    {\r\n        id: '@Permission/Banner/View',\r\n        name: 'View a banners list'\r\n    },\r\n    {\r\n        id: '@Permission/Banner/Create',\r\n        name: 'Create banner'\r\n    },\r\n    {\r\n        id: '@Permission/Banner/Update',\r\n        name: 'Update Banner'\r\n    },\r\n    {\r\n        id: '@Permission/Banner/Delete',\r\n        name: 'Delete Banner'\r\n    },\r\n    {\r\n        id: '@Permission/Product/View',\r\n        name: 'View a products list'\r\n    },\r\n    {\r\n        id: '@Permission/Product/Create',\r\n        name: 'Create product'\r\n    },\r\n    {\r\n        id: '@Permission/Product/Update',\r\n        name: 'Update product'\r\n    },\r\n    {\r\n        id: '@Permission/Product/Delete',\r\n        name: 'Delete product'\r\n    }\r\n];","export * from './RoleDTOs';\r\nexport * from './RoleEndpoint';\r\n","\r\nexport type Upload_DetailDTO = {\r\n    original_name: string;\r\n    new_name: string;\r\n    created_at: Date\r\n    type_file: string,\r\n};","import { EndPointUtil } from '../../utils';\r\n\r\nconst prefixUsersModule = 'upload';\r\n\r\nconst extendEndpoint = {};\r\n\r\nexport const UploadEndpoints = {\r\n    ...EndPointUtil.generateCRUD(prefixUsersModule),\r\n    ...extendEndpoint,\r\n};\r\n\r\n","export * from './UploadDTO';\r\nexport * from './UploadEndPoint';\r\n\r\n\r\n","\r\nimport { IsEmail, IsNotEmpty, MaxLength } from 'class-validator';\r\nimport { PaginationDTO } from '../../common';\r\nimport { Role } from '../../utils/Enum';\r\n\r\nexport type User_InfoItemDTO = {\r\n  display_name: string;\r\n  email: string;\r\n  phone: string\r\n  address: string,\r\n  avatar_url: string;\r\n  updated_at: Date\r\n};\r\n\r\n\r\nexport type User_ResponseLogin = {\r\n  permissions: Array<string>,\r\n  display_name: string;\r\n  email: string;\r\n  phone: string\r\n  address: string,\r\n  updated_at: Date,\r\n  avatar_url: string\r\n};\r\n\r\nexport type UserListResponse = {\r\n  result: User_InfoItemDTO[],\r\n  _next_page: number,\r\n  _prev_page: number,\r\n  _total: number,\r\n  _total_page: number,\r\n  _page: number,\r\n  _limit: number,\r\n}\r\n\r\nexport type User_InfoDetailDTO = {\r\n  id?: string;\r\n  display_name: string,\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  middle_name: string;\r\n  date_of_birth: Date;\r\n  phone: string\r\n  address: string,\r\n  avatar_url: string,\r\n  role?: string,\r\n  created_at: Date,\r\n  updated_at: Date,\r\n  isDeleted?: boolean,\r\n  created_by?: string,\r\n  updated_by?: string,\r\n\r\n};\r\n\r\nexport type User_CreateDTO = {\r\n  id: string;\r\n  display_name: string,\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  middle_name: string;\r\n  date_of_birth: Date;\r\n  phone: string\r\n  address: string,\r\n  avatar_url: string,\r\n  password: string,\r\n  created_by: string,\r\n}\r\n\r\nexport type User_Update = {\r\n  id?: string;\r\n  display_name: string,\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  middle_name: string;\r\n  date_of_birth: Date;\r\n  phone: string\r\n  address: string,\r\n  avatar_url: string,\r\n  created_at: Date,\r\n  updated_at: Date,\r\n  updated_by: string\r\n}\r\n\r\nexport type BaseMessageResponse = {\r\n  status: string;\r\n  message: string;\r\n  title: string;\r\n}\r\n\r\nexport type User_FindDTO = PaginationDTO<{\r\n  _keyword?: string;\r\n}>;\r\n\r\nexport type User_FindOneDTO = {\r\n  email: string;\r\n};\r\n\r\nexport class User_UpsertDTO {\r\n\r\n  id?: string;\r\n\r\n  @IsNotEmpty()\r\n  @MaxLength(20)\r\n  display_name !: string;\r\n\r\n  @IsEmail()\r\n  email!: string;\r\n\r\n  @IsNotEmpty()\r\n  @MaxLength(20)\r\n  first_name!: string;\r\n\r\n  @IsNotEmpty()\r\n  @MaxLength(20)\r\n  last_name!: string;\r\n\r\n  middle_name!: string;\r\n\r\n  password!: string;\r\n\r\n  @IsNotEmpty()\r\n  date_of_birth!: Date;\r\n\r\n  @IsNotEmpty()\r\n  @MaxLength(10)\r\n  phone!: string;\r\n\r\n  address!: string;\r\n\r\n  avatar_url?: string;\r\n\r\n  role?: string;\r\n\r\n  created_at?: Date;\r\n\r\n  updated_at?: Date;\r\n\r\n  updated_by?: string;\r\n\r\n  created_by?: string;\r\n}\r\n\r\nexport type User_DeleteDTO = {\r\n  email: string;\r\n};\r\n","import { EndPointUtil } from '../../utils';\r\n\r\nconst prefixUsersModule = 'users';\r\n\r\nconst extendEndpoint = {};\r\n\r\nexport const UserEndpoints = {\r\n  ...EndPointUtil.generateCRUD(prefixUsersModule),\r\n  ...extendEndpoint,\r\n};\r\n\r\n","export * from './UserDTOs';\r\nexport * from './UserEndpoint';\r\n\r\n","export type Message_Response = {\r\n    status: string;\r\n    message: string;\r\n    title: string;\r\n}\r\n","export class EndPointUtil {\r\n  static generateCRUD(module_name: string): {\r\n    Find: string;\r\n    FindOne: string;\r\n    FindPermissionOfUserByEmail: string;\r\n    Create: string;\r\n    Update: string;\r\n    Delete: string;\r\n    UploadFile: string;\r\n  } {\r\n    return {\r\n      Find: `${module_name}`,\r\n      Create: `${module_name}`,\r\n      FindOne: `${module_name}/id`,\r\n      FindPermissionOfUserByEmail:`${module_name}/email`,\r\n      Update: `${module_name}/id`,\r\n      Delete: `${module_name}/id`,\r\n      UploadFile: `${module_name}/upload`,\r\n    }\r\n  }\r\n}","export enum Action {\r\n    View = 'view',\r\n    Create = 'create',\r\n    Update = 'update',\r\n    Delete = 'delete',\r\n}\r\n\r\nexport enum Role {\r\n    ADMIN = 'admin',\r\n    USER = 'user',\r\n}\r\n\r\nexport enum Permission {\r\n    USER_VIEW = '@Permission/User/View',\r\n    USER_CREATE = '@Permission/User/Create',\r\n    USER_UPDATE = '@Permission/User/Update',\r\n    USER_DELETE = '@Permission/User/Delete',\r\n    NEWS_VIEW = '@Permission/News/View',\r\n    NEWS_CREATE = '@Permission/News/Create',\r\n    NEWS_UPDATE = '@Permission/News/Update',\r\n    NEWS_DELETE = '@Permission/News/Delete',\r\n    BANNER_VIEW = '@Permission/Banner/View',\r\n    BANNER_CREATE = '@Permission/Banner/Create',\r\n    BANNER_UPDATE = '@Permission/Banner/Update',\r\n    BANNER_DELETE = '@Permission/Banner/Delete',\r\n    ROLE_VIEW = '@Permission/Role/View',\r\n    ROLE_CREATE = '@Permission/Role/Create',\r\n    ROLE_UPDATE = '@Permission/Role/Update',\r\n    ROLE_DELETE = '@Permission/Role/Delete',\r\n    PRODUCT_VIEW = '@Permission/Product/View',\r\n    PRODUCT_CREATE = '@Permission/Product/Create',\r\n    PRODUCT_UPDATE = '@Permission/Product/Update',\r\n    PRODUCT_DELETE = '@Permission/Product/Delete',\r\n}","export * from './EndPointUtil';\r\nexport * from './DTOUtil'\r\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/platform-express\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"bcrypt\");","module.exports = require(\"class-validator\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","module.exports = require(\"multer\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"tslib\");","module.exports = require(\"uuid\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger, ValidationPipe } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\nimport cookieParser from 'cookie-parser';\r\n\r\nimport { AppModule } from './app/AppModule';\r\nimport { LoggingInterceptor } from './app/auth/LoggingInterceptor';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n  app.enableCors({\r\n    origin: true,\r\n    credentials: true\r\n  });\r\n  app.useGlobalInterceptors(new LoggingInterceptor());\r\n  app.useGlobalPipes(new ValidationPipe());\r\n  const globalPrefix = 'api';\r\n  app.use(cookieParser());\r\n  app.setGlobalPrefix(globalPrefix);\r\n  const port = process.env.PORT || 3333;\r\n  await app.listen(port);\r\n  Logger.log(\r\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\r\n  );\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}